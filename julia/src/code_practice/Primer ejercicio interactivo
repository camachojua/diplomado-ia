### A Pluto.jl notebook ###
# v0.20.3

using Markdown
using InteractiveUtils

# This Pluto notebook uses @bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of @bind gives bound variables a default value (instead of an error).
macro bind(def, element)
    #! format: off
    quote
        local iv = try Base.loaded_modules[Base.PkgId(Base.UUID("6e696c72-6542-2067-7265-42206c756150"), "AbstractPlutoDingetjes")].Bonds.initial_value catch; b -> missing; end
        local el = $(esc(element))
        global $(esc(def)) = Core.applicable(Base.get, el) ? Base.get(el) : iv(el)
        el
    end
    #! format: on
end

# ╔═╡ e7070187-4f4f-44f9-a600-032ec9eb8c9a
begin
	using PlutoUI
	using Images, ImageIO
	using HypertextLiteral
	using DataFrames
end

# ╔═╡ c6567d47-a5bb-44d7-bb00-21a764e34b6b
using PlutoTeachingTools

# ╔═╡ a71640de-710a-49ec-ad73-e9f864b6af29
md"# Jugando con Julia"

# ╔═╡ 635b048e-a860-11ef-14ae-5d21081aae2d
md"## Instalación de paquetes"

# ╔═╡ 5368d349-01ee-4b83-911a-2d08313b17cf
md"""Haremos uso del los paquetes:

	1. `PlutoUI`
	2. `Images`
	3. `ImageIO`
	4. `HypertextLiteral`

	Para comenzar la instalación hay que dar clic en el ícono 🢖 (o usar el atajo `Shift + Enter`) dentro de la celda que se encuentra abajo, eso instalará las depedencias necesarias para ejecutar este notebook.

	PD. El ícono se encuentra en la esquina inferior derecha de la celda."""

# ╔═╡ 1e27d1b9-7054-4fa5-beb0-a79a1e35c8b2
md"Recuerda que este documento es algo vivo, necesitas modificar el código existente, si todo sale bien el mismo notebook te lo hará saber."

# ╔═╡ 62f96bf6-5555-45d3-8762-d0baf20df1ef
md"""## ¿Imágenes? ¿Arreglos?

	De acuerdo a las notas que se compartieron sabemos que el tipo de dato `Vector` es un arreglo unidimensional, en particular vimos que es un alias ¿Cuál es la forma "original" de una variable cuyo tipo de dato es `Vector{Int64}`? Cambia el valor en la celda que se encuentra a continuación:"""

# ╔═╡ aa50a8dc-62f3-4ba9-9230-d244fdfc9221
vector_1d = Vector{Float64}(rand(10))

# ╔═╡ 12050c8d-8ebf-44bf-93db-797abdee4212
alias = Array{Int64, 1}(undef, 10)

# ╔═╡ 70faf3ec-f388-4421-93f9-d32743878c4f
if !@isdefined(alias)
	var_not_defined(:alias)
elseif ismissing(alias)
	still_missing()
elseif !(alias isa Array{Int64,1})
	keep_working(md"""
		¡Casi lo tienes!  el tipo de dato `Vector{T}` es un alias del tipo de dato `Array` recuerda que este tipo de datos puede tener múltiples dimensiones.
		""")
else
	correct(md"¡Correcto! El tipo de dato `Vector{T]` es un alias de un arreglo de una única dimension cuyo tipo de dato es `Array{T,1}`")
end

# ╔═╡ 1b9c4f9b-2d30-4eec-aa80-0e0fba6681da
begin
	colored_line(x::Vector) = hcat(Gray.(Float64.(x)))'
	colored_line(x::Any) = nothing
end

# ╔═╡ 03e0b352-2057-496a-9fb7-6ed85e483f4b
md"""Para comenzar a jugar podemos imaginar que tenemos un "duende" que nos permite convertir los vectores (arreglos unidimensionales) en una línea que contiene colores en escala de grises ¿A una escala de gris se le puede llamar color 🤔?
	Utilizaremos la función llamada `colored_line` que nos permite tener una representación gráfica de esto.
	Ejecuta la celda de abajo para saber cómo se ve nuestro arreglo `vector` en escala de grises.
"""

# ╔═╡ e6c7771c-2034-40d2-b8bd-27799412ffa0
imagen1 = colored_line(vector_1d)

# ╔═╡ ec7640b6-28cb-424a-a01f-c08323f9a642
md"Si queremos conocer el tipo de dato de una variable podemos hacer uso de la funcion `eltype`."

# ╔═╡ d8a3030f-85c3-455a-bc4c-2b1335a2676f
eltype(imagen1)

# ╔═╡ ed0a9ce6-04bb-43c4-a841-602319dce528
if eltype(imagen1) == Any
	var_not_defined(:imagen1)
elseif eltype(vector_1d) != Float64
	almost(md"""
		¡Ups! Nuestro duende hizo de las suyas (no compartió el conocimiento necesario para saber cuál era el *dominio* de la función `colored_line`),
		sépanse que `colored_line` hace uso de la función `Gray` la cual recibe un
		número real que se encuentra en el rango [0.0, 1.0], modifica la variable
		`vector_1d` para que sea un `Vector{Float64}`.""")
elseif eltype(imagen1) != Gray{Float64}
	keep_working(md"Necesitas crear una imagen en escala de grises")
elseif eltype(imagen1) == Gray{Float64}
	correct(md"¡Bien hecho! Ahora puedes disfrutar de la majestuocidad del tono de colores utilizado en la época del cine de oro mexicano 🎥")
end

# ╔═╡ bf58a68b-38d5-4baa-904e-eb1b4c642750
md"""## Ejercicios
	### 1
	Crea una función llamada `mi_suma` que calcula la suma de los elementos de un `Vector{Int64}`, para ello modifica la definición que se encuentra abajo, la manera más sencilla de implementar esto es utilizando un ciclo `for`. """

# ╔═╡ 437bdc1f-fd3d-4afc-8bb6-06da07c7e43a
function mi_suma(arreglo_unidimensional)
	# Tu código magestuoso va aquí
	return missing
end

# ╔═╡ da97c1dd-eaf6-43d1-add3-0926426f421c
mi_suma([1,2,3,4])

# ╔═╡ aaf9cc56-3a94-428f-9f96-c634eca9ab5a
if !@isdefined(mi_suma)
	not_defined(:mi_suma)
else
	let
		result = mi_suma([1,2,3,4])
		if ismissing(result)
			still_missing()
		elseif isnothing(result)
			keep_working(md"¿Olvidaste poner el `return`?")
		elseif result != 10
			keep_working()
		else
			correct()
		end
	end
end

# ╔═╡ 3f63f9d2-6688-41d5-8d89-d5ef056a3d43


# ╔═╡ 0a226ed1-5316-4a16-8a7d-f1f067672c6d
md"🤔 ¿Cómo podrías implementar la función `mi_suma` utilizando `map`?"

# ╔═╡ 5bd138dc-bbc1-4b03-a186-408c227f9e76
md"""### 2
Crea otra función llamada `media` que calcula la media/promedio de un 	`Array{Int64,1}` unidimencional"""

# ╔═╡ ee0c415e-ffa3-497e-a24f-2e7ecbd9a3a7
function media(arreglo_unidimensional)
	# Queremos ver ese código que hackeará la NASA
	return missing
end

# ╔═╡ d3e79382-489d-4b08-9460-dc7b439057a3
media([1,2,3])

# ╔═╡ ff5b5ab0-0cab-40c1-8834-befbb98674c1
if !@isdefined(media)
	not_defined(:media)
else
	let
		result = media([1,2,3])
		if ismissing(result)
			still_missing()
		elseif isnothing(result)
			keep_working(md"¿Olvidaste poner un `return` al final de la función?")
		elseif result != 2
			keep_working()
		else
			correct()
		end
	end
end

# ╔═╡ 5bf64adb-6649-4156-86e8-2421d6a8605d
md"👉 ¿cómo evaluarías la media de la variable `vector_1d` para que se almacenara en la variable `m`?"

# ╔═╡ 76dd6b01-0d6c-4522-9cca-2dad8b3aa170
m = missing # Reemplaza "missing" con tu código.

# ╔═╡ c1c7f08f-fc70-46da-a28c-f3d3875a6ed2
if !@isdefined(m)
	not_defined(:m)
elseif ismissing(m)
	still_missing()
elseif !(m isa Number)
	keep_working(md"`m` debería evaluarse a un número.")
elseif m != mean(random_vect)
	keep_working()
else
	correct()
end

# ╔═╡ 290dc343-3b91-428b-9323-fa107163ec67
md"""### 3
	Genera una función llamada `resta_media` que calcula la media de un arreglo y le resta ese valor a cada uno de los elementos del mismo.

	Recuerda utilizar la función `media` que declaraste arriba para no duplicar esfuerzos."""

# ╔═╡ 18caf8ad-4998-422d-b199-d07aa3919fb1
md"""
> ### Sobre la _mutación_ de los valores
> Hay dos formas de resolver este ejercicio, inicialmente puedes _modificar_ el vector original con el que estás trabajando o podrías crear un _nuevo vector_. En Julia se prefiere hacer lo segundo de tal manera que la información original permanezca sin alterar, el código que modifica la información sólo es válido cuando estamos haciendo modificaciones de desempeño muy específicas en partes aisladas de un programa, ya que esto requiere que el programador esté atento al _estado de ejecución del programa_ algo que no queremos tener en estas primeras etapas.
>
> 
> Recuerda que, dentro de Julia, las funciones que modifican los programas deben tener un `!` como sufijo en su nombre, por ejemplo, si nuestra función `media` modificara datos debería de llamarse `media!`.
"""

# ╔═╡ 8431591e-9d3b-48d1-b498-9a33d727b51c
function resta_media(arreglo_unidimensional)
	# Código para que el SAT(anás) nos devuelva el ISR del año
	return missing
end

# ╔═╡ 2a6caeb5-8ede-492a-ab29-463def88d640
test_vect = let
	
	# Puedes cambiar el valor de esta variable para probar tu código
	to_create = [-1.0, -1.5, 8.5]
	
	resta_media
	to_create
end

# ╔═╡ 53bf62c8-ca3e-43f3-9a2b-4d2089a28719
md"Para verificar nuestra función primero necesitamos calcular la media del vector `sin_media_test_vect`, en teoría el resultado debería ser `0` (o cercano a éste por cuestiones de redondeo de los números de punto flotante)."

# ╔═╡ 562b040d-fcc8-4ae9-b865-d83c8e5a6942
sin_media_test_vect = resta_media(test_vect)

# ╔═╡ ad44e4d9-f15f-4f45-90fd-83929907affa
media(sin_media_test_vect)

# ╔═╡ e4a03018-1c96-4c94-89cf-ba840b5884b5
if !@isdefined(media)
	not_defined(:media)
else
	let
		input = Float64[1,2,3]
		result = resta_media(input)
		
		if input === result
			almost(md"""
			Parece ser que **modificaste** el argumento `arreglo_unidimensional` dentro de la función.
			
			Es preferible que no hagas esto ¿Qué pasa si los datos vienen directamente de un sensor?.
			
			""")
		elseif ismissing(result)
			still_missing()
		elseif isnothing(result)
			keep_working(md"¿Olvidaste escribir `return` dentro de la función?")
		elseif !(result isa AbstractVector) || length(result) != 3
			keep_working(md"Debes regresar un vector del mismo tamaño que `arreglo_unidimensional`.")
		elseif abs(sum(result) / 3) < 1e-10
			correct()
		else
			keep_working()
		end
	end
end

# ╔═╡ d138b2f9-cc94-4575-a6a0-78d7735a9d01
md"""### 4

	Genera un vector de 100 elementos con las siguientes características:

    - Los 20 elementos al centro del vector tengan el valor `1`.
	- Todos los otros elementos son `0`.

	El vector tiene un tipo de dato `Vector{Int64}`
"""

# ╔═╡ 4acd06d1-c331-4fee-bfb3-82375e5702e3
function rellena()
	# Código va acá
	return missing
end

# ╔═╡ cbb6e559-bf09-42a8-b481-52c8350aedba
rellena()

# ╔═╡ 9a3aecdc-b3f6-48c4-98a3-58545fc540d2
if !@isdefined(rellena)
	not_defined(:rellena)
else
	let
		result = rellena()
		if ismissing(rellena)
			still_missing()
		elseif isnothing(result)
			keep_working(md"¿olvidaste poner un `return`?")
		elseif !(result isa Vector) || length(result) != 100
			keep_working(md"El resultado debe ser un `Vector` con 100 elementos.")
		elseif result[[1,50,100]] != [0,1,0]
			keep_working()
		else
			correct()
		end
	end
end

# ╔═╡ 52fbd30f-b500-4351-a568-56246f7f9ab4
md"""## 5. Ejercicios con cadenas
	En julia declaramos una cadena utilizando las comillas dobles (`"cadena"`)
	Genera una cadena de texto que contenga `Anita lava la tina` y asígnaselo a la variable `mi_cadena`."""

# ╔═╡ b5122c14-336c-4f42-b2d2-8b39397b2e88
mi_cadena = "anita lava la tina"

# ╔═╡ a07c979a-9416-460a-91ab-f3b233807bb5
md"""Existen varias operaciones que se pueden aplicar a las cadenas:
	- Revertirlas
	- Pasarlas a mayúsculas
	- Pasarlas a minúsculas
	- Escribir la primer letra de una palabra en mayúscula
	- Escribir la primer letra de la primer palabra de una frase en mayúscula
	- Buscar sub-cadenas
	- Combinar cadenas para generar cadenas nuevas

	Para esta sección necesitaremos que apliques **cada una de esas transformaciones** a la cadena `mi_cadena`."""

# ╔═╡ 257f39bd-6d4d-4cfe-ab85-3beaec58dc1f
md"Comenzaremos revirtiendo una cadena"

# ╔═╡ 2578a164-63b2-44c4-909a-ffd57b6dcdd3
revertir_cadena = missing

# ╔═╡ 9f579635-c4f4-4b82-a3ed-6a9c831be7e7
if !@isdefined(revertir_cadena)
	not_defined(:mi_cadena)
elseif ismissing(revertir_cadena)
	still_missing()
elseif typeof(revertir_cadena) != String
	stil_missing(md"`revertir_cadena` debe ser un `String`")
elseif revertir_cadena == reverse(mi_cadena)
	correct()
end

# ╔═╡ 1460b1b4-d628-4644-af5b-4ded724698bc
mayusculas = missing

# ╔═╡ 1cc18816-5021-4001-b278-f7c61e82f3d2
if !@isdefined(mayusculas)
	not_defined(:mayusculas)
elseif typeof(mayusculas) != String
	still_missing(md"`mayusculas` debe ser una cadena")
elseif mayusculas != uppercase(mi_cadena)
	keep_working(md"La variable `mayusculas` debe contener la cadena en MAYÚSCULAS")
elseif mayusculas == uppercase(mi_cadena)
	correct()
end

# ╔═╡ b94b9d8e-e205-4575-8c8d-e9aee7a33216
minusculas = missing

# ╔═╡ 698fda84-f7cf-4574-ae06-4f56ec1006da
if !@isdefined(minusculas)
	not_defined(:minusculas)
elseif typeof(minusculas) != String
	still_missing(md"`minusculas` debe ser una cadena")
elseif minusculas != lowercase(mi_cadena)
	keep_working(md"La variable `minusculas` debe contener la cadena en minusculas")
elseif minusculas == lowercase(mi_cadena)
	correct()
end

# ╔═╡ 46dd08ec-d338-494b-9167-c4943e1da884
camel_case = missing # Primer letra de cada palabra en mayúsculas

# ╔═╡ 677fa228-bbb9-483b-8335-910c0b8e0257
if !@isdefined(camel_case)
	not_defined(:camel_case)
elseif typeof(camel_case) != String
	still_missing(md"`camel_case` debe ser una cadena")
elseif camel_case != titlecase(mi_cadena)
	keep_working(md"La variable `camel_case` debe contener la primer letra de cada palabra en mayúscula")
elseif camel_case == titlecase(mi_cadena)
	correct()
end

# ╔═╡ 1373f946-8ca3-47da-879b-7894855763c7
first_case = missing # Primer letra de la frase en mayúsculas

# ╔═╡ 2d9f3e63-fade-4fa3-a21a-2adbbdfb4caf
if !@isdefined(first_case)
	not_defined(:camel_case)
elseif typeof(first_case) != String
	still_missing(md"`first_case` debe ser una cadena")
elseif first_case != uppercasefirst(mi_cadena)
	keep_working(md"La variable `first_case` debe contener la primer letra de la frase en mayúscula")
elseif first_case == uppercasefirst(mi_cadena)
	correct()
end

# ╔═╡ b08a7fe8-afc8-4ced-850e-499726b071b5
md"¿Cómo verificamos que `mi_cadena` contiene la subcadena `lava`? En cómputo este tipo de preguntas se responden con un `true` o `false`."

# ╔═╡ 82321fd6-f26d-4180-8876-3e6631c7ce6e
subcadena = missing

# ╔═╡ c2db3a47-06f5-4d4d-9d53-d5e24a0be370
if !@isdefined(subcadena)
	not_defined(:camel_case)
elseif typeof(subcadena) != Bool
	still_missing(md"`subcadena` debe ser un booleano")
elseif subcadena != true
	keep_working(md"La variable `subcadena` debe responder correctamente.")
elseif subcadena == occursin(mi_cadena)
	correct()
end

# ╔═╡ 649e4c6e-48e7-46c5-80c3-945d3db7b295
md"""### Ejercicio extra
	Dificultad: ⋆⋆⋆
	
	Genera una función `es_palindromo` que reciba una cadena y regrese `true` si
	el argumento que recibe es un [palíndromo](https://es.wikipedia.org/wiki/Pal%C3%ADndromo), `false` en otro caso.

	Ejemplo: `es_palindromo("Anita lava la tina")` regresa `true`."""

# ╔═╡ 4448c11d-e01a-419f-b6e5-3352c5f15095
function es_palindromo(cadena)
	# Determina si la cadena es un palíndromo o no
	return missing
end

# ╔═╡ 66978d78-ed97-4a5b-8ee8-a91caf2d6dff
resultado = es_palindromo("Son robos, no solo son sobornos")

# ╔═╡ 2de76067-79f9-4fcb-ba07-eb5b8cec66bd
if !@isdefined(resultado)
	not_defined(:camel_case)
elseif typeof(resultado) != Bool
	still_missing(md"`es_palindromo` debe regresar un booleano")
elseif es_palindromo("Dennis and Edna sinned") != true
	keep_working(md"""La cadena "Dennis and Edna sinned" es un palíndromo pero tu función dice que no lo es :(""")
elseif resultado == true
	correct()
end

# ╔═╡ 2f778dc2-3755-4dd0-aed4-28097243a3a4
md"""## 6. Ejercicios con tuplas
	Define una tupla que tenga los siguientes elementos en orden:
	- `"árbol"`
	- `42`
	- `[1,2,3]`"""

# ╔═╡ 3f76c202-72e9-4b00-8739-2132ed25ef1b
tupla = missing

# ╔═╡ 6551235f-4288-4e31-9056-9a7b406c2040
if !@isdefined(tupla)
	not_defined(:tupla)
elseif typeof(tupla) != Tuple
	still_missing(md"`tupla` debe ser del tipo `Tuple`.")
elseif (tupla[1] != "árbol") && (tupla[2] != 42) && (tupla[3] != [1,2,3])
	keep_working(md"La tupla debe contener los elementos indicados")
elseif set(tupla) == ("àrbol", 42, [1,2,3])
	correct()
end

# ╔═╡ 6f7a1b59-039a-45a8-9276-ea4034b9120b
md"¿Recuerdas cómo asociar a un elemento específico de la tupla asociándole un nombre? 🤔"

# ╔═╡ 15f98c76-cbb5-4c8e-9797-4fd91a723e93
md"""## 7. Ejercicios con diccionarios

	Crea un diccionario que contenga lo siguiente:

	- Una entrada llamada `cadena` que contenga el valor `"Hola mundo"`
	- Una entrada llamada `entero` que contenga el valor `42`
	- Una entrada llamada `flotante` que contenga el valor `3.14`

	Para esto crea una celda con el nombre de variable apropiado."""

# ╔═╡ 4cdc7ec2-be10-4df9-ada9-f7f45e1bbf9e
if !@isdefined(diccionario)
	not_defined(:diccionario)
elseif typeof(diccionario) != Dict{String, Any}
	keep_working(md"La variable `diccionario` debe ser un `Dict`.")
elseif keys(diccionario) != ["cadena", "entero", "flotante"]
	almost(md"La variable `diccionario` debe contener las llaves `cadena`, `entero` y `flotante`.")
elseif [get(diccionario, k, missing) for k in keys(diccionario)] != ["Hola mundo", 42, 3.14]
	almost(md"Asegúrante de que los valores de las entradas del diccionario son correctos")
else
	correct()	
end

# ╔═╡ ba32831b-637a-48a2-bebb-a9753bcfefd3
md"¿Cómo obtendrías un `Vector{String}` que contenga las llaves del diccionario? Guarda el resultado en una variable llamada `llaves`"

# ╔═╡ 57a60f8d-5eb9-47ca-b415-3594555ae23b
if !@isdefined(llaves)
	not_defined(:llaves)
elseif typeof(llaves) != Vector{String}
	keep_working(md"El resultado debe ser un `Vector{String}`")
elseif llaves == ["cadena", "entero", "flotante"]
	correct()
end

# ╔═╡ 6062c516-de31-4806-b1a5-a645b3a62ae9
md"¿Cómo obtendrías un `Vector` que contenga los **valores** del diccionario? Guarda el resultado en una variable llamada `valores`"

# ╔═╡ 14d30735-4f0f-4697-b496-f36f9436c8dd
if !@isdefined(valores)
	not_defined(:valores)
elseif valores == ["Hola mundo", 42, 3.14]
	correct()
else
	keep_working(md"La variable debe contener un `Vector` cuyos elementos son cada uno de los valores guardados en el diccionario")
end

# ╔═╡ 9ddc72eb-58e9-41a7-801c-f092fd014d50
md"""## DataFrames

	Al analizar la información disponible en cualquier libro de introducción a ciencia de datos es muy común que la información venga en un formato tabular (`csv`, `xls`, `xlsx`, por ejemplo). Por tabular nos referimos a que la información está distribuida en 2 dimensiones: filas y columnas.

	Un ejemplo de información tabular es la lista de las series más populares en Netflix durante el año 2024.

	| # | Título (en Inglés) | Horas vistas | Duración (horas) | Espectadores |
	|---|--------------------|--------------|------------------|--------------|
	|1|Fool Me Once: Limited Series|153,300,000|6:25|23,900,000|
	|2|The Brothers Sun: Season 1|50,500,000|7:20|6,900,000|
	|3|Jeffrey Epstein: Filthy Rich: Limited Series|15,100,000|3:46|4,000,000|

	Lo más natural es preguntarnos cosas como ¿Cuántas horas en total sumaron los espectadores viendo las 10 series más populares? o ¿Qué país se la pasa viendo más de una hora diaria la Rosa de Guadalupe 🤔? Alguna de estas preguntas implica realizar operaciones de búsqueda y manipulación de la información (operaciones entre filas y columnas), para esto existe el paquete `DataFrames.jl` que nos permite procesar información tabular de manera muy simple.

	A diferencia de otras bibliotecas como `pandas`, `DataFrame` se encuentra íntimamente integrado con Julia, es decir, la biblioteca trata de exponer un conjunto mínimo de funciones nuevas y permite utilizar funciones que ya conocemos (como `map`, `filter` y `reduce`).

	Antes de comensar puedes instalar la biblioteca con `using DataFrames` desde el intérprete.

	Definir una "tabla" con `DataFrames` es muy simple, tomemos como ejemplo la siguiente tabla:

	|Nombre|Calificación|Edad|
	|------|------------|----|
	|Sandra|10.0|37|
	|Angelina|7.5|27|
	|Valeria|8.8|26|
	|Amparo|9.0|35|
	|Anya|9.5|30|
	|Lucero|10.0|34|
	|Mayra|6.5|28|
	|Paulina|10.0|25|
	|Denisse|8.1|33|
	|Pilar|8.7|33|"""

# ╔═╡ 0e8e9341-2f44-4851-b01f-d65cb9de812c
nombres = ["Sandra", "Angelina", "Valeria", "Amparo", "Anya", "Lucero"]

# ╔═╡ 7d0bb93a-61ed-4e4d-8e59-39c9523716c6
md"Faltan algunas entradas en estas variables ¿Podrías agregarlas?"

# ╔═╡ b61e377c-d2ed-414d-a95a-71d3ec6a354c
calificacion = [10.0,7.5,8.8,9.0,9.5,10.0]

# ╔═╡ 102b2df7-749d-4d9b-b01e-1d59d326983a
edad = [37,27,26,35,30,34]

# ╔═╡ 0d453748-3c4b-47ce-b35f-215e729efcb0
df = DataFrame(; nombre=nombres,cal=calificacion,edad=edad)

# ╔═╡ e82de518-884a-437f-8b1a-81c3a6469f21
md"Con `DataFrames` podemos obtener la información de manera fácil, por ejemplo si queremos acceder únicamente a las calificaciones podemos ejecutar lo siguiente"

# ╔═╡ d53648e6-1e71-47d3-8693-3cecb2b6bdf7
select(df, :cal)

# ╔═╡ 82163383-c42f-45d4-95c3-534e0087cd98
md"""#### Ejercicio opcional
	¿Cómo obtendrías el mismo resultado si, en lugar de `DataFrame` metieras la información en un `Array`?"""

# ╔═╡ 903f739a-addc-471f-8f91-790f3da1e3a1
md"Podemos obtener la representación de una columna entera escribiendo el nombre de la columna después de un punto (`.`), en este ejemplo podemos obtener un `Vector` de nombres ejecutando `df.nombre`"

# ╔═╡ d99a9f8e-5a00-47d7-a93a-3178fec13d07
df.nombre

# ╔═╡ 8b9b15b8-2334-4996-bce3-6a94540ca7ca
md"Para obtener una entrada específica necesitamos ejecutar `df[3,:]` donde `3` es la tercer fila del data frame"

# ╔═╡ 0ff66ab9-dbcd-4ad3-b36f-a9e4f60e9356
df[3,:]

# ╔═╡ 468b85e3-2956-4816-a771-e533863df9e8
md"""### Filtrando información de un Dataframe
	Existen 2 formas de filtrar la información de un `DataFrame`:

	- `filter`
	- `subset`

	Recordemos la definición que teníamos de la tabla de calificaciones."""

# ╔═╡ 6667ccf8-c9d2-4bc3-96d2-768710d96bcf
df

# ╔═╡ 877dad0e-2356-449f-8727-bd4c3f82b57d
md"""Es posible "filtrar" la información haciendo uso de la función `filter`, dicha función tiene la siguiente "firma": `filter(fuente_datos => f::Function, data_frame)`, es decir necesita una función como primer argumento (lo que nos ayuda a "separar" la información) y un `DataFrame` como segundo argumento.

Como podemos pasarle a `filter` cualquier función podemos filtrar por ejemplo aquellas entradas de datos cuya calificación sea mayor a 9:"""

# ╔═╡ 0345f338-67f1-40fc-b33a-245ecb84340d
buenas_calificaciones(cal::Float64) = cal > 9.0

# ╔═╡ 50d02ae7-514e-441d-b72d-76c1e6a4733d
md"Definimos la función `buenas_calificaciones` que recibe un entero asociado a una variable llamada `cal` y regresa `true` o `false` dependiendo si `cal` es mayor o igual a `9`."

# ╔═╡ bbb3dd6d-b742-45c5-b44c-c92a86ec803d
filter(:cal => buenas_calificaciones, df)

# ╔═╡ 17ef5bbb-62f7-4083-b140-70bc10082e3f
md"""Es muy importante poner el símbolo `:cal =>` **antes** de mandar a llamar la función puesto que de esta forma Julia puede asociar la columna `cal` con el argumento que le estamos pasando al filtro.

¿Qué pasa si queremos obtener aquellas calificaciones que sean menores o iguales a 9? Simplemente **negamos** el valor que obtenemos de la función `buenas_calificaciones`:"""

# ╔═╡ 212ce250-671e-4544-bf0d-34f2f2c9bcac
filter(:cal => !buenas_calificaciones, df)

# ╔═╡ 137be08c-f1ec-4847-9494-160c34ed99a8
md"Como los filtros son funciones podemos hacerlos tan complicados como queramos, el siguiente filtro nos dará aquellas entradas donde la calificación sea mayor que 9 pero donde la edad sea mayor a 35"

# ╔═╡ 08987a64-37d4-4473-ba17-192cda21a6e2
function filtro_complejo(cal::Float64, edad::Int64)
	if cal > 9.0 && edad > 35
		return true
	end

	return false
end

# ╔═╡ 944b28d8-2895-44d5-9ad8-9da3bc764f72
md"""##### Tarea moral
	¿Qué ventaja tiene **no** escribir un `else` dentro de un `if` como en el ejemplo del filtro?"""

# ╔═╡ 79952b39-e9b4-4e51-947e-9b58aa59ae90
filter([:cal, :edad] => filtro_complejo, df)

# ╔═╡ 9e213047-2ece-4eb7-a8ef-ba2e050792e0
md"Es importante notar que ahora pusimos un `Vector` en lugar de un simple símbolo, si nuestros filtros necesitan más de un argumento para trabajar es necesario pasar el vector como parámetro."

# ╔═╡ 11fd6fa6-5390-4ac7-bf01-2d1e749050b9
md""" #### Subset
	A diferencia de `filter` (que implementa una interfaz estándar dentro de Julia), `subset` es una operación *específica y local* a la biblioteca `DataFrame.jl`, `subset` trabaja por columnas (a diferencia de los filtros), para obtener todas las entradas cuyo nombre comienza con `A` podemos sacar un subconjunto de la siguiente forma:"""

# ╔═╡ ffff98de-9628-4ecb-a896-9c4ec860d1d1
subset(df, :nombre => ByRow(nombre -> startswith(nombre, "A")))

# ╔═╡ e1540cd7-b8f3-4ab5-9112-8bbea3bedd97
md"""Más aún donde `subset` brilla es en el manejo de errores ¿Qué pasaría si una 	entrada tiene `cal` o `edad` nula? Con `subset` podemos introducir un tercer parámetro llamado `skipmissing=true` que se encarga de "saltar" a quellas entradas que posean algún errror."""

# ╔═╡ 6847fb1a-832d-4825-baef-8161ba166882
begin
	nombre2 = ["Sandra", missing, "Lina"]
	calificacion2 = [10.0, 8.9, 7.5]
	edad2 = [37, 33, missing]
	datos_malos = DataFrame(; nombre=nombre2, cal=calificacion2, edad=edad2)

	# Podemos filtrar datos aunque exista información faltante
	subset(datos_malos, :cal => ByRow(>(9.0)); skipmissing=true)
end

# ╔═╡ 7d1161c1-7043-41eb-8003-2341e7926fa2
md"¿Qué pasaría si aplicamos `filter` en lugar de `subset` 🤔?"

# ╔═╡ 99d0da7d-f8e5-4e23-9062-3fab25535c52
md"""#### Select
	Mientras que `filter` elimina filas, `select` elimina **columnas**:"""

# ╔═╡ d4633135-7966-4ced-812e-8e1f9d0c9acb
select(df, :nombre, :cal)

# ╔═╡ 60697404-4ac0-4847-b3c1-73c13ffdc349
select(df, :nombre, :edad)

# ╔═╡ 61df9011-8dab-4a4f-8b14-be7c27c451b4
md"""### Ejercicios

	Genera una función que reciba un `DataFrame` y entero para regresar la i-ésima fila de una tabla representada como un `DataFrame`, como referencia utiliza el ejemplo anterior que accede a la tercer fila de la tabla.

	Recuerda que las funciones **no** deben modificar los datos de entrada."""

# ╔═╡ 05b4a421-8ce5-43b8-93d7-ffd0640d0c36
function get_entry(data_frame, i)
	# Obtiene la i-ésima entrada de un DataFrame
	return missing
end

# ╔═╡ a622e5ab-5d15-41ec-b9d4-21728f783d7b
@bind numero Slider(1:9, default=1)

# ╔═╡ 3b15f13f-f894-4cef-9d8e-fc91d8faafe1
fila = get_entry(df, numero)

# ╔═╡ f78e91ca-d156-495d-8679-eeb825d7de26
if !@isdefined(fila)
	not_defined(:fila)
elseif typeof(fila) != DataFrameRow{DataFrame, DataFrames.Index}
	keep_working(md"La función debe regresar un `DataFrameRow`.")
elseif fila == df[numero, :]
	correct()
end

# ╔═╡ 49a65707-4d9a-4e40-8dea-cdcad40ab608
md"Considera las siguientes tablas:"

# ╔═╡ bc36b1d1-6af8-41d6-9e4f-fbb0bf7ddb2c
md"""| Nombre | Tipo |
	|--------|------|
	|Bulbasaur ![gif](https://archives.bulbagarden.net/media/upload/7/79/Pinani001.png)|planta|
	|Charmander ![gif](https://archives.bulbagarden.net/media/upload/8/89/Pinani004.png)|fuego|
	|Squirtle ![gif](https://archives.bulbagarden.net/media/upload/4/49/Pinani007.png)|agua|
	|Dratini ![gif](https://archives.bulbagarden.net/media/upload/8/8d/Pinani147.png)|dragón|
	|Pikachu ![gif](https://archives.bulbagarden.net/media/upload/8/83/PinRSani025.png)|eléctrico|
	|Sandshrew ![gif](https://archives.bulbagarden.net/media/upload/d/df/Pinani027.png)|tierra|"""

# ╔═╡ 3dda157f-7516-4248-93d8-d69e552d4ed6
md"""|Tipo|Debilidad|Fortaleza|
	 |----|---------|---------|
	 |planta|fuego,volador,veneno,hielo,bicho|tierra,roca,agua|
	 |fuego|tierra,roca,agua|bicho,planta,hielo,acero|
	 |agua|planta,eléctrico|tierra,roca,fuego|
	 |dragón|dragón,hielo,hada|dragón|
	 |eléctrico|tierra|volador,agua|
	 |tierra|agua,planta,hielo|veneno,roca,fuego,eléctrico,acero|"""

# ╔═╡ cec6a903-fc5e-4fec-8a86-8f499634cf1b
md"""Dada dicha información necesitamos crear 2 `Dataframes` llamados `pokemones` y `tipos` (respectivamente) y debemos obtener lo siguiente:

	- ¿Qué pokémon sería el más efectivo para utilizar si queremos que tenga la menor de las debilidades contra los listados en la tabla? Mete tu resultado (manipulando los `DataFrame` con las funciones `join`, `select`, `subset`, etc.) en una variable llamada `menos_debil`.
	- ¿Cuál es el pokemón que posee más debilidades contra los demás? Mete tu resultado (manipulando los `DataFrame` con las funciones `join`, `select`, `subset`, etc.) en una variable llamada `mas_debil`.
	- Si tuviera que armar un equipo de 2 pokemones que tengan la menor debilidad ante cualquier otro par de pokemones (Es decir, quiero obtener el par que sea más resistente contra cualquier otra combinación de dos pokemones dentro de la tabla) ¿Cuál sería tu elección? Mete tu resultado (manipulando los `DataFrame` con las funciones `join`, `select`, `subset`, etc.) en una variable llamada `dream_team` que contenga un `Vect{String}` de longitud 2.

	Considera que el nombre del pokemon comienza con mayúscula, mientras que el tipo está en minúscula."""

# ╔═╡ 01ae1b49-87ff-43f0-89bc-1c52e9fd8136
if !@isdefined(pokemones)
	not_defined(:pokemones)
elseif typeof(pokemones) != DataFrame
	keep_working(md"La variable `pokemones` debe ser un `DataFrame`.")
elseif !hasproperty(pokemones, :nombre) || !hasproperty(pokemones, :tipo)
	almost(md"El `DataFrame` debe tener las columnas `:nombre` y `:tipo`.")
elseif pokemones.nombre == ["Bulbasaur", "Charmander", "Squirtle", "Dratini", "Pikachu"]
	correct()
end

# ╔═╡ 17688a78-6431-4fe8-98db-ac4b5e9f78cb
if !@isdefined(tipos)
	not_defined(:tipos)
elseif typeof(tipos) != DataFrame
	keep_working(md"La variable `tipos` debe ser un `DataFrame`.")
elseif !hasproperty(tipos, :debilidad) || !hasproperty(pokemones, :fortaleza) || !hasproperty(tipos, :tipo)
	almost(md"El `DataFrame` debe tener las columnas `:tipo`, `:debilidad` y `:fortaleza`.")
elseif pokemones.tipo == ["planta", "fuego", "agua", "dragón", "eléctrico"]
	correct()
end

# ╔═╡ 56c2bd1c-a32b-4098-a5aa-d3c8ec3b9333
if !@isdefined(menos_debil)
	not_defined(:menos_debil)
elseif menos_debil != "Pikachu"
	almost(md"Aún te falta mucho para ser un maestro pokemón.")
else
	correct()
end

# ╔═╡ 3e52f29e-4858-43bb-913a-cacc32f51311
if !@isdefined(mas_debil)
	not_defined(:mas_debil)
elseif mas_debil != "Bulbasaur"
	almost(md"La defensa es crítica para tener un equipo balanceado.")
else
	correct()
end

# ╔═╡ c46a9b40-ca5e-4b4d-9fe6-29c54178a15c
if !@isdefined(dream_team)
	not_defined(:dream_team)
elseif dream_team != ["Pikachu", "Dratini"]
	almost(md"Puedes mejorar, aún te falta mucho por aprender.")
else
	correct(md"¿Acaso eres el mismísimo Red que vino a reclamar su trono?")
end

# ╔═╡ 76ad1b54-d57a-4bc7-9665-58e9df429259
md"**Tarea moral**: ¿Puedes hacer el análisis anterior considerando fortalezas y debilidades?"

# ╔═╡ 00000000-0000-0000-0000-000000000001
PLUTO_PROJECT_TOML_CONTENTS = """
[deps]
DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
HypertextLiteral = "ac1192a8-f4b3-4bfe-ba22-af5b92cd3ab2"
ImageIO = "82e4d734-157c-48bb-816b-45c225c6df19"
Images = "916415d5-f1e6-5110-898d-aaa5f9f070e0"
PlutoTeachingTools = "661c6b06-c737-4d37-b85c-46df65de6f69"
PlutoUI = "7f904dfe-b85e-4ff6-b463-dae2292396a8"

[compat]
DataFrames = "~1.7.0"
HypertextLiteral = "~0.9.5"
ImageIO = "~0.6.8"
Images = "~0.26.1"
PlutoTeachingTools = "~0.3.1"
PlutoUI = "~0.7.60"
"""

# ╔═╡ 00000000-0000-0000-0000-000000000002
PLUTO_MANIFEST_TOML_CONTENTS = """
# This file is machine-generated - editing it directly is not advised

julia_version = "1.11.1"
manifest_format = "2.0"
project_hash = "e985d8662a30ccc9b04ea385611a039facf8b565"

[[deps.AbstractFFTs]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "d92ad398961a3ed262d8bf04a1a2b8340f915fef"
uuid = "621f4979-c628-5d54-868e-fcf4e3e8185c"
version = "1.5.0"
weakdeps = ["ChainRulesCore", "Test"]

    [deps.AbstractFFTs.extensions]
    AbstractFFTsChainRulesCoreExt = "ChainRulesCore"
    AbstractFFTsTestExt = "Test"

[[deps.AbstractPlutoDingetjes]]
deps = ["Pkg"]
git-tree-sha1 = "6e1d2a35f2f90a4bc7c2ed98079b2ba09c35b83a"
uuid = "6e696c72-6542-2067-7265-42206c756150"
version = "1.3.2"

[[deps.Adapt]]
deps = ["LinearAlgebra", "Requires"]
git-tree-sha1 = "6a55b747d1812e699320963ffde36f1ebdda4099"
uuid = "79e6a3ab-5dfb-504d-930d-738a2a938a0e"
version = "4.0.4"
weakdeps = ["StaticArrays"]

    [deps.Adapt.extensions]
    AdaptStaticArraysExt = "StaticArrays"

[[deps.ArgTools]]
uuid = "0dad84c5-d112-42e6-8d28-ef12dabb789f"
version = "1.1.2"

[[deps.ArnoldiMethod]]
deps = ["LinearAlgebra", "Random", "StaticArrays"]
git-tree-sha1 = "d57bd3762d308bded22c3b82d033bff85f6195c6"
uuid = "ec485272-7323-5ecc-a04f-4719b315124d"
version = "0.4.0"

[[deps.ArrayInterface]]
deps = ["Adapt", "LinearAlgebra"]
git-tree-sha1 = "3640d077b6dafd64ceb8fd5c1ec76f7ca53bcf76"
uuid = "4fba245c-0d91-5ea0-9b3e-6abc04ee57a9"
version = "7.16.0"

    [deps.ArrayInterface.extensions]
    ArrayInterfaceBandedMatricesExt = "BandedMatrices"
    ArrayInterfaceBlockBandedMatricesExt = "BlockBandedMatrices"
    ArrayInterfaceCUDAExt = "CUDA"
    ArrayInterfaceCUDSSExt = "CUDSS"
    ArrayInterfaceChainRulesExt = "ChainRules"
    ArrayInterfaceGPUArraysCoreExt = "GPUArraysCore"
    ArrayInterfaceReverseDiffExt = "ReverseDiff"
    ArrayInterfaceSparseArraysExt = "SparseArrays"
    ArrayInterfaceStaticArraysCoreExt = "StaticArraysCore"
    ArrayInterfaceTrackerExt = "Tracker"

    [deps.ArrayInterface.weakdeps]
    BandedMatrices = "aae01518-5342-5314-be14-df237901396f"
    BlockBandedMatrices = "ffab5731-97b5-5995-9138-79e8c1846df0"
    CUDA = "052768ef-5323-5732-b1bb-66c8b64840ba"
    CUDSS = "45b445bb-4962-46a0-9369-b4df9d0f772e"
    ChainRules = "082447d4-558c-5d27-93f4-14fc19e9eca2"
    GPUArraysCore = "46192b85-c4d5-4398-a991-12ede77f4527"
    ReverseDiff = "37e2e3b7-166d-5795-8a7a-e32c996b4267"
    SparseArrays = "2f01184e-e22b-5df5-ae63-d93ebab69eaf"
    StaticArraysCore = "1e83bf80-4336-4d27-bf5d-d5a4f845583c"
    Tracker = "9f7883ad-71c0-57eb-9f7f-b5c9e6d3789c"

[[deps.Artifacts]]
uuid = "56f22d72-fd6d-98f1-02f0-08ddc0907c33"
version = "1.11.0"

[[deps.AxisAlgorithms]]
deps = ["LinearAlgebra", "Random", "SparseArrays", "WoodburyMatrices"]
git-tree-sha1 = "01b8ccb13d68535d73d2b0c23e39bd23155fb712"
uuid = "13072b0f-2c55-5437-9ae7-d433b7a33950"
version = "1.1.0"

[[deps.AxisArrays]]
deps = ["Dates", "IntervalSets", "IterTools", "RangeArrays"]
git-tree-sha1 = "16351be62963a67ac4083f748fdb3cca58bfd52f"
uuid = "39de3d68-74b9-583c-8d2d-e117c070f3a9"
version = "0.4.7"

[[deps.Base64]]
uuid = "2a0f44e3-6c83-55bd-87e4-b1978d98bd5f"
version = "1.11.0"

[[deps.BitTwiddlingConvenienceFunctions]]
deps = ["Static"]
git-tree-sha1 = "f21cfd4950cb9f0587d5067e69405ad2acd27b87"
uuid = "62783981-4cbd-42fc-bca8-16325de8dc4b"
version = "0.1.6"

[[deps.CEnum]]
git-tree-sha1 = "389ad5c84de1ae7cf0e28e381131c98ea87d54fc"
uuid = "fa961155-64e5-5f13-b03f-caf6b980ea82"
version = "0.5.0"

[[deps.CPUSummary]]
deps = ["CpuId", "IfElse", "PrecompileTools", "Static"]
git-tree-sha1 = "5a97e67919535d6841172016c9530fd69494e5ec"
uuid = "2a0fbf3d-bb9c-48f3-b0a9-814d99fd7ab9"
version = "0.2.6"

[[deps.CatIndices]]
deps = ["CustomUnitRanges", "OffsetArrays"]
git-tree-sha1 = "a0f80a09780eed9b1d106a1bf62041c2efc995bc"
uuid = "aafaddc9-749c-510e-ac4f-586e18779b91"
version = "0.2.2"

[[deps.ChainRulesCore]]
deps = ["Compat", "LinearAlgebra"]
git-tree-sha1 = "3e4b134270b372f2ed4d4d0e936aabaefc1802bc"
uuid = "d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4"
version = "1.25.0"
weakdeps = ["SparseArrays"]

    [deps.ChainRulesCore.extensions]
    ChainRulesCoreSparseArraysExt = "SparseArrays"

[[deps.CloseOpenIntervals]]
deps = ["Static", "StaticArrayInterface"]
git-tree-sha1 = "05ba0d07cd4fd8b7a39541e31a7b0254704ea581"
uuid = "fb6a15b2-703c-40df-9091-08a04967cfa9"
version = "0.1.13"

[[deps.Clustering]]
deps = ["Distances", "LinearAlgebra", "NearestNeighbors", "Printf", "Random", "SparseArrays", "Statistics", "StatsBase"]
git-tree-sha1 = "9ebb045901e9bbf58767a9f34ff89831ed711aae"
uuid = "aaaa29a8-35af-508c-8bc3-b662a17a0fe5"
version = "0.15.7"

[[deps.CodeTracking]]
deps = ["InteractiveUtils", "UUIDs"]
git-tree-sha1 = "7eee164f122511d3e4e1ebadb7956939ea7e1c77"
uuid = "da1fd8a2-8d9e-5ec2-8556-3022fb5608a2"
version = "1.3.6"

[[deps.ColorSchemes]]
deps = ["ColorTypes", "ColorVectorSpace", "Colors", "FixedPointNumbers", "PrecompileTools", "Random"]
git-tree-sha1 = "b5278586822443594ff615963b0c09755771b3e0"
uuid = "35d6a980-a343-548e-a6ea-1d62b119f2f4"
version = "3.26.0"

[[deps.ColorTypes]]
deps = ["FixedPointNumbers", "Random"]
git-tree-sha1 = "b10d0b65641d57b8b4d5e234446582de5047050d"
uuid = "3da002f7-5984-5a60-b8a6-cbb66c0b333f"
version = "0.11.5"

[[deps.ColorVectorSpace]]
deps = ["ColorTypes", "FixedPointNumbers", "LinearAlgebra", "SpecialFunctions", "Statistics", "TensorCore"]
git-tree-sha1 = "600cc5508d66b78aae350f7accdb58763ac18589"
uuid = "c3611d14-8923-5661-9e6a-0046d554d3a4"
version = "0.9.10"

[[deps.Colors]]
deps = ["ColorTypes", "FixedPointNumbers", "Reexport"]
git-tree-sha1 = "362a287c3aa50601b0bc359053d5c2468f0e7ce0"
uuid = "5ae59095-9a9b-59fe-a467-6f913c188581"
version = "0.12.11"

[[deps.CommonWorldInvalidations]]
git-tree-sha1 = "ae52d1c52048455e85a387fbee9be553ec2b68d0"
uuid = "f70d9fcc-98c5-4d4a-abd7-e4cdeebd8ca8"
version = "1.0.0"

[[deps.Compat]]
deps = ["TOML", "UUIDs"]
git-tree-sha1 = "8ae8d32e09f0dcf42a36b90d4e17f5dd2e4c4215"
uuid = "34da2185-b29b-5c13-b0c7-acf172513d20"
version = "4.16.0"
weakdeps = ["Dates", "LinearAlgebra"]

    [deps.Compat.extensions]
    CompatLinearAlgebraExt = "LinearAlgebra"

[[deps.CompilerSupportLibraries_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "e66e0078-7015-5450-92f7-15fbd957f2ae"
version = "1.1.1+0"

[[deps.ComputationalResources]]
git-tree-sha1 = "52cb3ec90e8a8bea0e62e275ba577ad0f74821f7"
uuid = "ed09eef8-17a6-5b46-8889-db040fac31e3"
version = "0.3.2"

[[deps.ConstructionBase]]
git-tree-sha1 = "76219f1ed5771adbb096743bff43fb5fdd4c1157"
uuid = "187b0558-2788-49d3-abe0-74a17ed4e7c9"
version = "1.5.8"
weakdeps = ["IntervalSets", "LinearAlgebra", "StaticArrays"]

    [deps.ConstructionBase.extensions]
    ConstructionBaseIntervalSetsExt = "IntervalSets"
    ConstructionBaseLinearAlgebraExt = "LinearAlgebra"
    ConstructionBaseStaticArraysExt = "StaticArrays"

[[deps.CoordinateTransformations]]
deps = ["LinearAlgebra", "StaticArrays"]
git-tree-sha1 = "f9d7112bfff8a19a3a4ea4e03a8e6a91fe8456bf"
uuid = "150eb455-5306-5404-9cee-2592286d6298"
version = "0.6.3"

[[deps.CpuId]]
deps = ["Markdown"]
git-tree-sha1 = "fcbb72b032692610bfbdb15018ac16a36cf2e406"
uuid = "adafc99b-e345-5852-983c-f28acb93d879"
version = "0.3.1"

[[deps.Crayons]]
git-tree-sha1 = "249fe38abf76d48563e2f4556bebd215aa317e15"
uuid = "a8cc5b0e-0ffa-5ad4-8c14-923d3ee1735f"
version = "4.1.1"

[[deps.CustomUnitRanges]]
git-tree-sha1 = "1a3f97f907e6dd8983b744d2642651bb162a3f7a"
uuid = "dc8bdbbb-1ca9-579f-8c36-e416f6a65cce"
version = "1.0.2"

[[deps.DataAPI]]
git-tree-sha1 = "abe83f3a2f1b857aac70ef8b269080af17764bbe"
uuid = "9a962f9c-6df0-11e9-0e5d-c546b8b5ee8a"
version = "1.16.0"

[[deps.DataFrames]]
deps = ["Compat", "DataAPI", "DataStructures", "Future", "InlineStrings", "InvertedIndices", "IteratorInterfaceExtensions", "LinearAlgebra", "Markdown", "Missings", "PooledArrays", "PrecompileTools", "PrettyTables", "Printf", "Random", "Reexport", "SentinelArrays", "SortingAlgorithms", "Statistics", "TableTraits", "Tables", "Unicode"]
git-tree-sha1 = "fb61b4812c49343d7ef0b533ba982c46021938a6"
uuid = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
version = "1.7.0"

[[deps.DataStructures]]
deps = ["Compat", "InteractiveUtils", "OrderedCollections"]
git-tree-sha1 = "1d0a14036acb104d9e89698bd408f63ab58cdc82"
uuid = "864edb3b-99cc-5e75-8d2d-829cb0a9cfe8"
version = "0.18.20"

[[deps.DataValueInterfaces]]
git-tree-sha1 = "bfc1187b79289637fa0ef6d4436ebdfe6905cbd6"
uuid = "e2d170a0-9d28-54be-80f0-106bbe20a464"
version = "1.0.0"

[[deps.Dates]]
deps = ["Printf"]
uuid = "ade2ca70-3891-5945-98fb-dc099432e06a"
version = "1.11.0"

[[deps.Distances]]
deps = ["LinearAlgebra", "Statistics", "StatsAPI"]
git-tree-sha1 = "66c4c81f259586e8f002eacebc177e1fb06363b0"
uuid = "b4f34e82-e78d-54a5-968a-f98e89d6e8f7"
version = "0.10.11"
weakdeps = ["ChainRulesCore", "SparseArrays"]

    [deps.Distances.extensions]
    DistancesChainRulesCoreExt = "ChainRulesCore"
    DistancesSparseArraysExt = "SparseArrays"

[[deps.Distributed]]
deps = ["Random", "Serialization", "Sockets"]
uuid = "8ba89e20-285c-5b6f-9357-94700520ee1b"
version = "1.11.0"

[[deps.DocStringExtensions]]
deps = ["LibGit2"]
git-tree-sha1 = "2fb1e02f2b635d0845df5d7c167fec4dd739b00d"
uuid = "ffbed154-4ef7-542d-bbb7-c09d3a79fcae"
version = "0.9.3"

[[deps.Downloads]]
deps = ["ArgTools", "FileWatching", "LibCURL", "NetworkOptions"]
uuid = "f43a241f-c20a-4ad4-852c-f6b1247861c6"
version = "1.6.0"

[[deps.FFTViews]]
deps = ["CustomUnitRanges", "FFTW"]
git-tree-sha1 = "cbdf14d1e8c7c8aacbe8b19862e0179fd08321c2"
uuid = "4f61f5a4-77b1-5117-aa51-3ab5ef4ef0cd"
version = "0.3.2"

[[deps.FFTW]]
deps = ["AbstractFFTs", "FFTW_jll", "LinearAlgebra", "MKL_jll", "Preferences", "Reexport"]
git-tree-sha1 = "4820348781ae578893311153d69049a93d05f39d"
uuid = "7a1cc6ca-52ef-59f5-83cd-3a7055c09341"
version = "1.8.0"

[[deps.FFTW_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "4d81ed14783ec49ce9f2e168208a12ce1815aa25"
uuid = "f5851436-0d7a-5f13-b9de-f02708fd171a"
version = "3.3.10+1"

[[deps.FileIO]]
deps = ["Pkg", "Requires", "UUIDs"]
git-tree-sha1 = "62ca0547a14c57e98154423419d8a342dca75ca9"
uuid = "5789e2e9-d7fb-5bc7-8068-2c6fae9b9549"
version = "1.16.4"

[[deps.FileWatching]]
uuid = "7b1f6079-737a-58dc-b8bc-7a2ca5c1b5ee"
version = "1.11.0"

[[deps.FixedPointNumbers]]
deps = ["Statistics"]
git-tree-sha1 = "05882d6995ae5c12bb5f36dd2ed3f61c98cbb172"
uuid = "53c48c17-4a7d-5ca2-90c5-79b7896eea93"
version = "0.8.5"

[[deps.Format]]
git-tree-sha1 = "9c68794ef81b08086aeb32eeaf33531668d5f5fc"
uuid = "1fa38f19-a742-5d3f-a2b9-30dd87b9d5f8"
version = "1.3.7"

[[deps.Future]]
deps = ["Random"]
uuid = "9fa8497b-333b-5362-9e8d-4d0656e87820"
version = "1.11.0"

[[deps.Ghostscript_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "43ba3d3c82c18d88471cfd2924931658838c9d8f"
uuid = "61579ee1-b43e-5ca0-a5da-69d92c66a64b"
version = "9.55.0+4"

[[deps.Graphics]]
deps = ["Colors", "LinearAlgebra", "NaNMath"]
git-tree-sha1 = "d61890399bc535850c4bf08e4e0d3a7ad0f21cbd"
uuid = "a2bd30eb-e257-5431-a919-1863eab51364"
version = "1.1.2"

[[deps.Graphs]]
deps = ["ArnoldiMethod", "Compat", "DataStructures", "Distributed", "Inflate", "LinearAlgebra", "Random", "SharedArrays", "SimpleTraits", "SparseArrays", "Statistics"]
git-tree-sha1 = "1dc470db8b1131cfc7fb4c115de89fe391b9e780"
uuid = "86223c79-3864-5bf0-83f7-82e725a168b6"
version = "1.12.0"

[[deps.HistogramThresholding]]
deps = ["ImageBase", "LinearAlgebra", "MappedArrays"]
git-tree-sha1 = "7194dfbb2f8d945abdaf68fa9480a965d6661e69"
uuid = "2c695a8d-9458-5d45-9878-1b8a99cf7853"
version = "0.3.1"

[[deps.HostCPUFeatures]]
deps = ["BitTwiddlingConvenienceFunctions", "IfElse", "Libdl", "Static"]
git-tree-sha1 = "8e070b599339d622e9a081d17230d74a5c473293"
uuid = "3e5b6fbb-0976-4d2c-9146-d79de83f2fb0"
version = "0.1.17"

[[deps.Hyperscript]]
deps = ["Test"]
git-tree-sha1 = "179267cfa5e712760cd43dcae385d7ea90cc25a4"
uuid = "47d2ed2b-36de-50cf-bf87-49c2cf4b8b91"
version = "0.0.5"

[[deps.HypertextLiteral]]
deps = ["Tricks"]
git-tree-sha1 = "7134810b1afce04bbc1045ca1985fbe81ce17653"
uuid = "ac1192a8-f4b3-4bfe-ba22-af5b92cd3ab2"
version = "0.9.5"

[[deps.IOCapture]]
deps = ["Logging", "Random"]
git-tree-sha1 = "b6d6bfdd7ce25b0f9b2f6b3dd56b2673a66c8770"
uuid = "b5f81e59-6552-4d32-b1f0-c071b021bf89"
version = "0.2.5"

[[deps.IfElse]]
git-tree-sha1 = "debdd00ffef04665ccbb3e150747a77560e8fad1"
uuid = "615f187c-cbe4-4ef1-ba3b-2fcf58d6d173"
version = "0.1.1"

[[deps.ImageAxes]]
deps = ["AxisArrays", "ImageBase", "ImageCore", "Reexport", "SimpleTraits"]
git-tree-sha1 = "2e4520d67b0cef90865b3ef727594d2a58e0e1f8"
uuid = "2803e5a7-5153-5ecf-9a86-9b4c37f5f5ac"
version = "0.6.11"

[[deps.ImageBase]]
deps = ["ImageCore", "Reexport"]
git-tree-sha1 = "b51bb8cae22c66d0f6357e3bcb6363145ef20835"
uuid = "c817782e-172a-44cc-b673-b171935fbb9e"
version = "0.1.5"

[[deps.ImageBinarization]]
deps = ["HistogramThresholding", "ImageCore", "LinearAlgebra", "Polynomials", "Reexport", "Statistics"]
git-tree-sha1 = "33485b4e40d1df46c806498c73ea32dc17475c59"
uuid = "cbc4b850-ae4b-5111-9e64-df94c024a13d"
version = "0.3.1"

[[deps.ImageContrastAdjustment]]
deps = ["ImageBase", "ImageCore", "ImageTransformations", "Parameters"]
git-tree-sha1 = "eb3d4365a10e3f3ecb3b115e9d12db131d28a386"
uuid = "f332f351-ec65-5f6a-b3d1-319c6670881a"
version = "0.3.12"

[[deps.ImageCore]]
deps = ["AbstractFFTs", "ColorVectorSpace", "Colors", "FixedPointNumbers", "Graphics", "MappedArrays", "MosaicViews", "OffsetArrays", "PaddedViews", "Reexport"]
git-tree-sha1 = "acf614720ef026d38400b3817614c45882d75500"
uuid = "a09fc81d-aa75-5fe9-8630-4744c3626534"
version = "0.9.4"

[[deps.ImageCorners]]
deps = ["ImageCore", "ImageFiltering", "PrecompileTools", "StaticArrays", "StatsBase"]
git-tree-sha1 = "24c52de051293745a9bad7d73497708954562b79"
uuid = "89d5987c-236e-4e32-acd0-25bd6bd87b70"
version = "0.1.3"

[[deps.ImageDistances]]
deps = ["Distances", "ImageCore", "ImageMorphology", "LinearAlgebra", "Statistics"]
git-tree-sha1 = "08b0e6354b21ef5dd5e49026028e41831401aca8"
uuid = "51556ac3-7006-55f5-8cb3-34580c88182d"
version = "0.2.17"

[[deps.ImageFiltering]]
deps = ["CatIndices", "ComputationalResources", "DataStructures", "FFTViews", "FFTW", "ImageBase", "ImageCore", "LinearAlgebra", "OffsetArrays", "PrecompileTools", "Reexport", "SparseArrays", "StaticArrays", "Statistics", "TiledIteration"]
git-tree-sha1 = "3447781d4c80dbe6d71d239f7cfb1f8049d4c84f"
uuid = "6a3955dd-da59-5b1f-98d4-e7296123deb5"
version = "0.7.6"

[[deps.ImageIO]]
deps = ["FileIO", "IndirectArrays", "JpegTurbo", "LazyModules", "Netpbm", "OpenEXR", "PNGFiles", "QOI", "Sixel", "TiffImages", "UUIDs"]
git-tree-sha1 = "437abb322a41d527c197fa800455f79d414f0a3c"
uuid = "82e4d734-157c-48bb-816b-45c225c6df19"
version = "0.6.8"

[[deps.ImageMagick]]
deps = ["FileIO", "ImageCore", "ImageMagick_jll", "InteractiveUtils", "Libdl", "Pkg", "Random"]
git-tree-sha1 = "5bc1cb62e0c5f1005868358db0692c994c3a13c6"
uuid = "6218d12a-5da1-5696-b52f-db25d2ecc6d1"
version = "1.2.1"

[[deps.ImageMagick_jll]]
deps = ["Artifacts", "Ghostscript_jll", "JLLWrappers", "JpegTurbo_jll", "Libdl", "Libtiff_jll", "OpenJpeg_jll", "Zlib_jll", "libpng_jll"]
git-tree-sha1 = "d65554bad8b16d9562050c67e7223abf91eaba2f"
uuid = "c73af94c-d91f-53ed-93a7-00f77d67a9d7"
version = "6.9.13+0"

[[deps.ImageMetadata]]
deps = ["AxisArrays", "ImageAxes", "ImageBase", "ImageCore"]
git-tree-sha1 = "355e2b974f2e3212a75dfb60519de21361ad3cb7"
uuid = "bc367c6b-8a6b-528e-b4bd-a4b897500b49"
version = "0.9.9"

[[deps.ImageMorphology]]
deps = ["DataStructures", "ImageCore", "LinearAlgebra", "LoopVectorization", "OffsetArrays", "Requires", "TiledIteration"]
git-tree-sha1 = "6f0a801136cb9c229aebea0df296cdcd471dbcd1"
uuid = "787d08f9-d448-5407-9aad-5290dd7ab264"
version = "0.4.5"

[[deps.ImageQualityIndexes]]
deps = ["ImageContrastAdjustment", "ImageCore", "ImageDistances", "ImageFiltering", "LazyModules", "OffsetArrays", "PrecompileTools", "Statistics"]
git-tree-sha1 = "783b70725ed326340adf225be4889906c96b8fd1"
uuid = "2996bd0c-7a13-11e9-2da2-2f5ce47296a9"
version = "0.3.7"

[[deps.ImageSegmentation]]
deps = ["Clustering", "DataStructures", "Distances", "Graphs", "ImageCore", "ImageFiltering", "ImageMorphology", "LinearAlgebra", "MetaGraphs", "RegionTrees", "SimpleWeightedGraphs", "StaticArrays", "Statistics"]
git-tree-sha1 = "44664eea5408828c03e5addb84fa4f916132fc26"
uuid = "80713f31-8817-5129-9cf8-209ff8fb23e1"
version = "1.8.1"

[[deps.ImageShow]]
deps = ["Base64", "ColorSchemes", "FileIO", "ImageBase", "ImageCore", "OffsetArrays", "StackViews"]
git-tree-sha1 = "3b5344bcdbdc11ad58f3b1956709b5b9345355de"
uuid = "4e3cecfd-b093-5904-9786-8bbb286a6a31"
version = "0.3.8"

[[deps.ImageTransformations]]
deps = ["AxisAlgorithms", "CoordinateTransformations", "ImageBase", "ImageCore", "Interpolations", "OffsetArrays", "Rotations", "StaticArrays"]
git-tree-sha1 = "e0884bdf01bbbb111aea77c348368a86fb4b5ab6"
uuid = "02fcd773-0e25-5acc-982a-7f6622650795"
version = "0.10.1"

[[deps.Images]]
deps = ["Base64", "FileIO", "Graphics", "ImageAxes", "ImageBase", "ImageBinarization", "ImageContrastAdjustment", "ImageCore", "ImageCorners", "ImageDistances", "ImageFiltering", "ImageIO", "ImageMagick", "ImageMetadata", "ImageMorphology", "ImageQualityIndexes", "ImageSegmentation", "ImageShow", "ImageTransformations", "IndirectArrays", "IntegralArrays", "Random", "Reexport", "SparseArrays", "StaticArrays", "Statistics", "StatsBase", "TiledIteration"]
git-tree-sha1 = "12fdd617c7fe25dc4a6cc804d657cc4b2230302b"
uuid = "916415d5-f1e6-5110-898d-aaa5f9f070e0"
version = "0.26.1"

[[deps.Imath_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "0936ba688c6d201805a83da835b55c61a180db52"
uuid = "905a6f67-0a94-5f89-b386-d35d92009cd1"
version = "3.1.11+0"

[[deps.IndirectArrays]]
git-tree-sha1 = "012e604e1c7458645cb8b436f8fba789a51b257f"
uuid = "9b13fd28-a010-5f03-acff-a1bbcff69959"
version = "1.0.0"

[[deps.Inflate]]
git-tree-sha1 = "d1b1b796e47d94588b3757fe84fbf65a5ec4a80d"
uuid = "d25df0c9-e2be-5dd7-82c8-3ad0b3e990b9"
version = "0.1.5"

[[deps.InlineStrings]]
git-tree-sha1 = "45521d31238e87ee9f9732561bfee12d4eebd52d"
uuid = "842dd82b-1e85-43dc-bf29-5d0ee9dffc48"
version = "1.4.2"

    [deps.InlineStrings.extensions]
    ArrowTypesExt = "ArrowTypes"
    ParsersExt = "Parsers"

    [deps.InlineStrings.weakdeps]
    ArrowTypes = "31f734f8-188a-4ce0-8406-c8a06bd891cd"
    Parsers = "69de0a69-1ddd-5017-9359-2bf0b02dc9f0"

[[deps.IntegralArrays]]
deps = ["ColorTypes", "FixedPointNumbers", "IntervalSets"]
git-tree-sha1 = "be8e690c3973443bec584db3346ddc904d4884eb"
uuid = "1d092043-8f09-5a30-832f-7509e371ab51"
version = "0.1.5"

[[deps.IntelOpenMP_jll]]
deps = ["Artifacts", "JLLWrappers", "LazyArtifacts", "Libdl"]
git-tree-sha1 = "10bd689145d2c3b2a9844005d01087cc1194e79e"
uuid = "1d5cc7b8-4909-519e-a0f8-d0f5ad9712d0"
version = "2024.2.1+0"

[[deps.InteractiveUtils]]
deps = ["Markdown"]
uuid = "b77e0a4c-d291-57a0-90e8-8db25a27a240"
version = "1.11.0"

[[deps.Interpolations]]
deps = ["Adapt", "AxisAlgorithms", "ChainRulesCore", "LinearAlgebra", "OffsetArrays", "Random", "Ratios", "Requires", "SharedArrays", "SparseArrays", "StaticArrays", "WoodburyMatrices"]
git-tree-sha1 = "88a101217d7cb38a7b481ccd50d21876e1d1b0e0"
uuid = "a98d9a8b-a2ab-59e6-89dd-64a1c18fca59"
version = "0.15.1"

    [deps.Interpolations.extensions]
    InterpolationsUnitfulExt = "Unitful"

    [deps.Interpolations.weakdeps]
    Unitful = "1986cc42-f94f-5a68-af5c-568840ba703d"

[[deps.IntervalSets]]
git-tree-sha1 = "dba9ddf07f77f60450fe5d2e2beb9854d9a49bd0"
uuid = "8197267c-284f-5f27-9208-e0e47529a953"
version = "0.7.10"
weakdeps = ["Random", "RecipesBase", "Statistics"]

    [deps.IntervalSets.extensions]
    IntervalSetsRandomExt = "Random"
    IntervalSetsRecipesBaseExt = "RecipesBase"
    IntervalSetsStatisticsExt = "Statistics"

[[deps.InvertedIndices]]
git-tree-sha1 = "0dc7b50b8d436461be01300fd8cd45aa0274b038"
uuid = "41ab1584-1d38-5bbf-9106-f11c6c58b48f"
version = "1.3.0"

[[deps.IrrationalConstants]]
git-tree-sha1 = "630b497eafcc20001bba38a4651b327dcfc491d2"
uuid = "92d709cd-6900-40b7-9082-c6be49f344b6"
version = "0.2.2"

[[deps.IterTools]]
git-tree-sha1 = "42d5f897009e7ff2cf88db414a389e5ed1bdd023"
uuid = "c8e1da08-722c-5040-9ed9-7db0dc04731e"
version = "1.10.0"

[[deps.IteratorInterfaceExtensions]]
git-tree-sha1 = "a3f24677c21f5bbe9d2a714f95dcd58337fb2856"
uuid = "82899510-4779-5014-852e-03e436cf321d"
version = "1.0.0"

[[deps.JLD2]]
deps = ["FileIO", "MacroTools", "Mmap", "OrderedCollections", "PrecompileTools", "Requires", "TranscodingStreams"]
git-tree-sha1 = "a0746c21bdc986d0dc293efa6b1faee112c37c28"
uuid = "033835bb-8acc-5ee8-8aae-3f567f8a3819"
version = "0.4.53"

[[deps.JLLWrappers]]
deps = ["Artifacts", "Preferences"]
git-tree-sha1 = "be3dc50a92e5a386872a493a10050136d4703f9b"
uuid = "692b3bcd-3c85-4b1f-b108-f13ce0eb3210"
version = "1.6.1"

[[deps.JSON]]
deps = ["Dates", "Mmap", "Parsers", "Unicode"]
git-tree-sha1 = "31e996f0a15c7b280ba9f76636b3ff9e2ae58c9a"
uuid = "682c06a0-de6a-54ab-a142-c8b1cf79cde6"
version = "0.21.4"

[[deps.JpegTurbo]]
deps = ["CEnum", "FileIO", "ImageCore", "JpegTurbo_jll", "TOML"]
git-tree-sha1 = "fa6d0bcff8583bac20f1ffa708c3913ca605c611"
uuid = "b835a17e-a41a-41e7-81f0-2f016b05efe0"
version = "0.1.5"

[[deps.JpegTurbo_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "25ee0be4d43d0269027024d75a24c24d6c6e590c"
uuid = "aacddb02-875f-59d6-b918-886e6ef4fbf8"
version = "3.0.4+0"

[[deps.JuliaInterpreter]]
deps = ["CodeTracking", "InteractiveUtils", "Random", "UUIDs"]
git-tree-sha1 = "2984284a8abcfcc4784d95a9e2ea4e352dd8ede7"
uuid = "aa1ae85d-cabe-5617-a682-6adf51b2e16a"
version = "0.9.36"

[[deps.LERC_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "36bdbc52f13a7d1dcb0f3cd694e01677a515655b"
uuid = "88015f11-f218-50d7-93a8-a6af411a945d"
version = "4.0.0+0"

[[deps.LaTeXStrings]]
git-tree-sha1 = "dda21b8cbd6a6c40d9d02a73230f9d70fed6918c"
uuid = "b964fa9f-0449-5b57-a5c2-d3ea65f4040f"
version = "1.4.0"

[[deps.Latexify]]
deps = ["Format", "InteractiveUtils", "LaTeXStrings", "MacroTools", "Markdown", "OrderedCollections", "Requires"]
git-tree-sha1 = "ce5f5621cac23a86011836badfedf664a612cee4"
uuid = "23fbe1c1-3f47-55db-b15f-69d7ec21a316"
version = "0.16.5"

    [deps.Latexify.extensions]
    DataFramesExt = "DataFrames"
    SparseArraysExt = "SparseArrays"
    SymEngineExt = "SymEngine"

    [deps.Latexify.weakdeps]
    DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
    SparseArrays = "2f01184e-e22b-5df5-ae63-d93ebab69eaf"
    SymEngine = "123dc426-2d89-5057-bbad-38513e3affd8"

[[deps.LayoutPointers]]
deps = ["ArrayInterface", "LinearAlgebra", "ManualMemory", "SIMDTypes", "Static", "StaticArrayInterface"]
git-tree-sha1 = "a9eaadb366f5493a5654e843864c13d8b107548c"
uuid = "10f19ff3-798f-405d-979b-55457f8fc047"
version = "0.1.17"

[[deps.LazyArtifacts]]
deps = ["Artifacts", "Pkg"]
uuid = "4af54fe1-eca0-43a8-85a7-787d91b784e3"
version = "1.11.0"

[[deps.LazyModules]]
git-tree-sha1 = "a560dd966b386ac9ae60bdd3a3d3a326062d3c3e"
uuid = "8cdb02fc-e678-4876-92c5-9defec4f444e"
version = "0.3.1"

[[deps.LibCURL]]
deps = ["LibCURL_jll", "MozillaCACerts_jll"]
uuid = "b27032c2-a3e7-50c8-80cd-2d36dbcbfd21"
version = "0.6.4"

[[deps.LibCURL_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll", "Zlib_jll", "nghttp2_jll"]
uuid = "deac9b47-8bc7-5906-a0fe-35ac56dc84c0"
version = "8.6.0+0"

[[deps.LibGit2]]
deps = ["Base64", "LibGit2_jll", "NetworkOptions", "Printf", "SHA"]
uuid = "76f85450-5226-5b5a-8eaa-529ad045b433"
version = "1.11.0"

[[deps.LibGit2_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll"]
uuid = "e37daf67-58a4-590a-8e99-b0245dd2ffc5"
version = "1.7.2+0"

[[deps.LibSSH2_jll]]
deps = ["Artifacts", "Libdl", "MbedTLS_jll"]
uuid = "29816b5a-b9ab-546f-933c-edad1886dfa8"
version = "1.11.0+1"

[[deps.Libdl]]
uuid = "8f399da3-3557-5675-b5ff-fb832c97cbdb"
version = "1.11.0"

[[deps.Libtiff_jll]]
deps = ["Artifacts", "JLLWrappers", "JpegTurbo_jll", "LERC_jll", "Libdl", "XZ_jll", "Zlib_jll", "Zstd_jll"]
git-tree-sha1 = "b404131d06f7886402758c9ce2214b636eb4d54a"
uuid = "89763e89-9b03-5906-acba-b20f662cd828"
version = "4.7.0+0"

[[deps.LinearAlgebra]]
deps = ["Libdl", "OpenBLAS_jll", "libblastrampoline_jll"]
uuid = "37e2e46d-f89d-539d-b4ee-838fcccc9c8e"
version = "1.11.0"

[[deps.LittleCMS_jll]]
deps = ["Artifacts", "JLLWrappers", "JpegTurbo_jll", "Libdl", "Libtiff_jll"]
git-tree-sha1 = "fa7fd067dca76cadd880f1ca937b4f387975a9f5"
uuid = "d3a379c0-f9a3-5b72-a4c0-6bf4d2e8af0f"
version = "2.16.0+0"

[[deps.LogExpFunctions]]
deps = ["DocStringExtensions", "IrrationalConstants", "LinearAlgebra"]
git-tree-sha1 = "a2d09619db4e765091ee5c6ffe8872849de0feea"
uuid = "2ab3a3ac-af41-5b50-aa03-7779005ae688"
version = "0.3.28"

    [deps.LogExpFunctions.extensions]
    LogExpFunctionsChainRulesCoreExt = "ChainRulesCore"
    LogExpFunctionsChangesOfVariablesExt = "ChangesOfVariables"
    LogExpFunctionsInverseFunctionsExt = "InverseFunctions"

    [deps.LogExpFunctions.weakdeps]
    ChainRulesCore = "d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4"
    ChangesOfVariables = "9e997f8a-9a97-42d5-a9f1-ce6bfc15e2c0"
    InverseFunctions = "3587e190-3f89-42d0-90ee-14403ec27112"

[[deps.Logging]]
uuid = "56ddb016-857b-54e1-b83d-db4d58db5568"
version = "1.11.0"

[[deps.LoopVectorization]]
deps = ["ArrayInterface", "CPUSummary", "CloseOpenIntervals", "DocStringExtensions", "HostCPUFeatures", "IfElse", "LayoutPointers", "LinearAlgebra", "OffsetArrays", "PolyesterWeave", "PrecompileTools", "SIMDTypes", "SLEEFPirates", "Static", "StaticArrayInterface", "ThreadingUtilities", "UnPack", "VectorizationBase"]
git-tree-sha1 = "8084c25a250e00ae427a379a5b607e7aed96a2dd"
uuid = "bdcacae8-1622-11e9-2a5c-532679323890"
version = "0.12.171"

    [deps.LoopVectorization.extensions]
    ForwardDiffExt = ["ChainRulesCore", "ForwardDiff"]
    SpecialFunctionsExt = "SpecialFunctions"

    [deps.LoopVectorization.weakdeps]
    ChainRulesCore = "d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4"
    ForwardDiff = "f6369f11-7733-5829-9624-2563aa707210"
    SpecialFunctions = "276daf66-3868-5448-9aa4-cd146d93841b"

[[deps.LoweredCodeUtils]]
deps = ["JuliaInterpreter"]
git-tree-sha1 = "260dc274c1bc2cb839e758588c63d9c8b5e639d1"
uuid = "6f1432cf-f94c-5a45-995e-cdbf5db27b0b"
version = "3.0.5"

[[deps.MIMEs]]
git-tree-sha1 = "65f28ad4b594aebe22157d6fac869786a255b7eb"
uuid = "6c6e2e6c-3030-632d-7369-2d6c69616d65"
version = "0.1.4"

[[deps.MKL_jll]]
deps = ["Artifacts", "IntelOpenMP_jll", "JLLWrappers", "LazyArtifacts", "Libdl", "oneTBB_jll"]
git-tree-sha1 = "f046ccd0c6db2832a9f639e2c669c6fe867e5f4f"
uuid = "856f044c-d86e-5d09-b602-aeab76dc8ba7"
version = "2024.2.0+0"

[[deps.MacroTools]]
deps = ["Markdown", "Random"]
git-tree-sha1 = "2fa9ee3e63fd3a4f7a9a4f4744a52f4856de82df"
uuid = "1914dd2f-81c6-5fcd-8719-6d5c9610ff09"
version = "0.5.13"

[[deps.ManualMemory]]
git-tree-sha1 = "bcaef4fc7a0cfe2cba636d84cda54b5e4e4ca3cd"
uuid = "d125e4d3-2237-4719-b19c-fa641b8a4667"
version = "0.1.8"

[[deps.MappedArrays]]
git-tree-sha1 = "2dab0221fe2b0f2cb6754eaa743cc266339f527e"
uuid = "dbb5928d-eab1-5f90-85c2-b9b0edb7c900"
version = "0.4.2"

[[deps.Markdown]]
deps = ["Base64"]
uuid = "d6f4376e-aef5-505a-96c1-9c027394607a"
version = "1.11.0"

[[deps.MbedTLS_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "c8ffd9c3-330d-5841-b78e-0817d7145fa1"
version = "2.28.6+0"

[[deps.MetaGraphs]]
deps = ["Graphs", "JLD2", "Random"]
git-tree-sha1 = "1130dbe1d5276cb656f6e1094ce97466ed700e5a"
uuid = "626554b9-1ddb-594c-aa3c-2596fe9399a5"
version = "0.7.2"

[[deps.Missings]]
deps = ["DataAPI"]
git-tree-sha1 = "ec4f7fbeab05d7747bdf98eb74d130a2a2ed298d"
uuid = "e1d29d7a-bbdc-5cf2-9ac0-f12de2c33e28"
version = "1.2.0"

[[deps.Mmap]]
uuid = "a63ad114-7e13-5084-954f-fe012c677804"
version = "1.11.0"

[[deps.MosaicViews]]
deps = ["MappedArrays", "OffsetArrays", "PaddedViews", "StackViews"]
git-tree-sha1 = "7b86a5d4d70a9f5cdf2dacb3cbe6d251d1a61dbe"
uuid = "e94cdb99-869f-56ef-bcf0-1ae2bcbe0389"
version = "0.3.4"

[[deps.MozillaCACerts_jll]]
uuid = "14a3606d-f60d-562e-9121-12d972cd8159"
version = "2023.12.12"

[[deps.NaNMath]]
deps = ["OpenLibm_jll"]
git-tree-sha1 = "0877504529a3e5c3343c6f8b4c0381e57e4387e4"
uuid = "77ba4419-2d1f-58cd-9bb1-8ffee604a2e3"
version = "1.0.2"

[[deps.NearestNeighbors]]
deps = ["Distances", "StaticArrays"]
git-tree-sha1 = "3cebfc94a0754cc329ebc3bab1e6c89621e791ad"
uuid = "b8a86587-4115-5ab1-83bc-aa920d37bbce"
version = "0.4.20"

[[deps.Netpbm]]
deps = ["FileIO", "ImageCore", "ImageMetadata"]
git-tree-sha1 = "d92b107dbb887293622df7697a2223f9f8176fcd"
uuid = "f09324ee-3d7c-5217-9330-fc30815ba969"
version = "1.1.1"

[[deps.NetworkOptions]]
uuid = "ca575930-c2e3-43a9-ace4-1e988b2c1908"
version = "1.2.0"

[[deps.OffsetArrays]]
git-tree-sha1 = "1a27764e945a152f7ca7efa04de513d473e9542e"
uuid = "6fe1bfb0-de20-5000-8ca7-80f57d26f881"
version = "1.14.1"
weakdeps = ["Adapt"]

    [deps.OffsetArrays.extensions]
    OffsetArraysAdaptExt = "Adapt"

[[deps.OpenBLAS_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "Libdl"]
uuid = "4536629a-c528-5b80-bd46-f80d51c5b363"
version = "0.3.27+1"

[[deps.OpenEXR]]
deps = ["Colors", "FileIO", "OpenEXR_jll"]
git-tree-sha1 = "327f53360fdb54df7ecd01e96ef1983536d1e633"
uuid = "52e1d378-f018-4a11-a4be-720524705ac7"
version = "0.3.2"

[[deps.OpenEXR_jll]]
deps = ["Artifacts", "Imath_jll", "JLLWrappers", "Libdl", "Zlib_jll"]
git-tree-sha1 = "8292dd5c8a38257111ada2174000a33745b06d4e"
uuid = "18a262bb-aa17-5467-a713-aee519bc75cb"
version = "3.2.4+0"

[[deps.OpenJpeg_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Libtiff_jll", "LittleCMS_jll", "libpng_jll"]
git-tree-sha1 = "f4cb457ffac5f5cf695699f82c537073958a6a6c"
uuid = "643b3616-a352-519d-856d-80112ee9badc"
version = "2.5.2+0"

[[deps.OpenLibm_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "05823500-19ac-5b8b-9628-191a04bc5112"
version = "0.8.1+2"

[[deps.OpenSpecFun_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "13652491f6856acfd2db29360e1bbcd4565d04f1"
uuid = "efe28fd5-8261-553b-a9e1-b2916fc3738e"
version = "0.5.5+0"

[[deps.OrderedCollections]]
git-tree-sha1 = "dfdf5519f235516220579f949664f1bf44e741c5"
uuid = "bac558e1-5e72-5ebc-8fee-abe8a469f55d"
version = "1.6.3"

[[deps.PNGFiles]]
deps = ["Base64", "CEnum", "ImageCore", "IndirectArrays", "OffsetArrays", "libpng_jll"]
git-tree-sha1 = "67186a2bc9a90f9f85ff3cc8277868961fb57cbd"
uuid = "f57f5aa1-a3ce-4bc8-8ab9-96f992907883"
version = "0.4.3"

[[deps.PaddedViews]]
deps = ["OffsetArrays"]
git-tree-sha1 = "0fac6313486baae819364c52b4f483450a9d793f"
uuid = "5432bcbf-9aad-5242-b902-cca2824c8663"
version = "0.5.12"

[[deps.Parameters]]
deps = ["OrderedCollections", "UnPack"]
git-tree-sha1 = "34c0e9ad262e5f7fc75b10a9952ca7692cfc5fbe"
uuid = "d96e819e-fc66-5662-9728-84c9c7592b0a"
version = "0.12.3"

[[deps.Parsers]]
deps = ["Dates", "PrecompileTools", "UUIDs"]
git-tree-sha1 = "8489905bcdbcfac64d1daa51ca07c0d8f0283821"
uuid = "69de0a69-1ddd-5017-9359-2bf0b02dc9f0"
version = "2.8.1"

[[deps.Pkg]]
deps = ["Artifacts", "Dates", "Downloads", "FileWatching", "LibGit2", "Libdl", "Logging", "Markdown", "Printf", "Random", "SHA", "TOML", "Tar", "UUIDs", "p7zip_jll"]
uuid = "44cfe95a-1eb2-52ea-b672-e2afdf69b78f"
version = "1.11.0"
weakdeps = ["REPL"]

    [deps.Pkg.extensions]
    REPLExt = "REPL"

[[deps.PkgVersion]]
deps = ["Pkg"]
git-tree-sha1 = "f9501cc0430a26bc3d156ae1b5b0c1b47af4d6da"
uuid = "eebad327-c553-4316-9ea0-9fa01ccd7688"
version = "0.3.3"

[[deps.PlutoHooks]]
deps = ["InteractiveUtils", "Markdown", "UUIDs"]
git-tree-sha1 = "072cdf20c9b0507fdd977d7d246d90030609674b"
uuid = "0ff47ea0-7a50-410d-8455-4348d5de0774"
version = "0.0.5"

[[deps.PlutoLinks]]
deps = ["FileWatching", "InteractiveUtils", "Markdown", "PlutoHooks", "Revise", "UUIDs"]
git-tree-sha1 = "8f5fa7056e6dcfb23ac5211de38e6c03f6367794"
uuid = "0ff47ea0-7a50-410d-8455-4348d5de0420"
version = "0.1.6"

[[deps.PlutoTeachingTools]]
deps = ["Downloads", "HypertextLiteral", "Latexify", "Markdown", "PlutoLinks", "PlutoUI"]
git-tree-sha1 = "8252b5de1f81dc103eb0293523ddf917695adea1"
uuid = "661c6b06-c737-4d37-b85c-46df65de6f69"
version = "0.3.1"

[[deps.PlutoUI]]
deps = ["AbstractPlutoDingetjes", "Base64", "ColorTypes", "Dates", "FixedPointNumbers", "Hyperscript", "HypertextLiteral", "IOCapture", "InteractiveUtils", "JSON", "Logging", "MIMEs", "Markdown", "Random", "Reexport", "URIs", "UUIDs"]
git-tree-sha1 = "eba4810d5e6a01f612b948c9fa94f905b49087b0"
uuid = "7f904dfe-b85e-4ff6-b463-dae2292396a8"
version = "0.7.60"

[[deps.PolyesterWeave]]
deps = ["BitTwiddlingConvenienceFunctions", "CPUSummary", "IfElse", "Static", "ThreadingUtilities"]
git-tree-sha1 = "645bed98cd47f72f67316fd42fc47dee771aefcd"
uuid = "1d0040c9-8b98-4ee7-8388-3f51789ca0ad"
version = "0.2.2"

[[deps.Polynomials]]
deps = ["LinearAlgebra", "RecipesBase", "Requires", "Setfield", "SparseArrays"]
git-tree-sha1 = "1a9cfb2dc2c2f1bd63f1906d72af39a79b49b736"
uuid = "f27b6e38-b328-58d1-80ce-0feddd5e7a45"
version = "4.0.11"

    [deps.Polynomials.extensions]
    PolynomialsChainRulesCoreExt = "ChainRulesCore"
    PolynomialsFFTWExt = "FFTW"
    PolynomialsMakieCoreExt = "MakieCore"
    PolynomialsMutableArithmeticsExt = "MutableArithmetics"

    [deps.Polynomials.weakdeps]
    ChainRulesCore = "d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4"
    FFTW = "7a1cc6ca-52ef-59f5-83cd-3a7055c09341"
    MakieCore = "20f20a25-4f0e-4fdf-b5d1-57303727442b"
    MutableArithmetics = "d8a4904e-b15c-11e9-3269-09a3773c0cb0"

[[deps.PooledArrays]]
deps = ["DataAPI", "Future"]
git-tree-sha1 = "36d8b4b899628fb92c2749eb488d884a926614d3"
uuid = "2dfb63ee-cc39-5dd5-95bd-886bf059d720"
version = "1.4.3"

[[deps.PrecompileTools]]
deps = ["Preferences"]
git-tree-sha1 = "5aa36f7049a63a1528fe8f7c3f2113413ffd4e1f"
uuid = "aea7be01-6a6a-4083-8856-8a6e6704d82a"
version = "1.2.1"

[[deps.Preferences]]
deps = ["TOML"]
git-tree-sha1 = "9306f6085165d270f7e3db02af26a400d580f5c6"
uuid = "21216c6a-2e73-6563-6e65-726566657250"
version = "1.4.3"

[[deps.PrettyTables]]
deps = ["Crayons", "LaTeXStrings", "Markdown", "PrecompileTools", "Printf", "Reexport", "StringManipulation", "Tables"]
git-tree-sha1 = "1101cd475833706e4d0e7b122218257178f48f34"
uuid = "08abe8d2-0d0c-5749-adfa-8a2ac140af0d"
version = "2.4.0"

[[deps.Printf]]
deps = ["Unicode"]
uuid = "de0858da-6303-5e67-8744-51eddeeeb8d7"
version = "1.11.0"

[[deps.ProgressMeter]]
deps = ["Distributed", "Printf"]
git-tree-sha1 = "8f6bc219586aef8baf0ff9a5fe16ee9c70cb65e4"
uuid = "92933f4c-e287-5a05-a399-4b506db050ca"
version = "1.10.2"

[[deps.QOI]]
deps = ["ColorTypes", "FileIO", "FixedPointNumbers"]
git-tree-sha1 = "18e8f4d1426e965c7b532ddd260599e1510d26ce"
uuid = "4b34888f-f399-49d4-9bb3-47ed5cae4e65"
version = "1.0.0"

[[deps.Quaternions]]
deps = ["LinearAlgebra", "Random", "RealDot"]
git-tree-sha1 = "994cc27cdacca10e68feb291673ec3a76aa2fae9"
uuid = "94ee1d12-ae83-5a48-8b1c-48b8ff168ae0"
version = "0.7.6"

[[deps.REPL]]
deps = ["InteractiveUtils", "Markdown", "Sockets", "StyledStrings", "Unicode"]
uuid = "3fa0cd96-eef1-5676-8a61-b3b8758bbffb"
version = "1.11.0"

[[deps.Random]]
deps = ["SHA"]
uuid = "9a3f8284-a2c9-5f02-9a11-845980a1fd5c"
version = "1.11.0"

[[deps.RangeArrays]]
git-tree-sha1 = "b9039e93773ddcfc828f12aadf7115b4b4d225f5"
uuid = "b3c3ace0-ae52-54e7-9d0b-2c1406fd6b9d"
version = "0.3.2"

[[deps.Ratios]]
deps = ["Requires"]
git-tree-sha1 = "1342a47bf3260ee108163042310d26f2be5ec90b"
uuid = "c84ed2f1-dad5-54f0-aa8e-dbefe2724439"
version = "0.4.5"
weakdeps = ["FixedPointNumbers"]

    [deps.Ratios.extensions]
    RatiosFixedPointNumbersExt = "FixedPointNumbers"

[[deps.RealDot]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "9f0a1b71baaf7650f4fa8a1d168c7fb6ee41f0c9"
uuid = "c1ae055f-0cd5-4b69-90a6-9a35b1a98df9"
version = "0.1.0"

[[deps.RecipesBase]]
deps = ["PrecompileTools"]
git-tree-sha1 = "5c3d09cc4f31f5fc6af001c250bf1278733100ff"
uuid = "3cdcf5f2-1ef4-517c-9805-6587b60abb01"
version = "1.3.4"

[[deps.Reexport]]
git-tree-sha1 = "45e428421666073eab6f2da5c9d310d99bb12f9b"
uuid = "189a3867-3050-52da-a836-e630ba90ab69"
version = "1.2.2"

[[deps.RegionTrees]]
deps = ["IterTools", "LinearAlgebra", "StaticArrays"]
git-tree-sha1 = "4618ed0da7a251c7f92e869ae1a19c74a7d2a7f9"
uuid = "dee08c22-ab7f-5625-9660-a9af2021b33f"
version = "0.3.2"

[[deps.Requires]]
deps = ["UUIDs"]
git-tree-sha1 = "838a3a4188e2ded87a4f9f184b4b0d78a1e91cb7"
uuid = "ae029012-a4dd-5104-9daa-d747884805df"
version = "1.3.0"

[[deps.Revise]]
deps = ["CodeTracking", "Distributed", "FileWatching", "JuliaInterpreter", "LibGit2", "LoweredCodeUtils", "OrderedCollections", "REPL", "Requires", "UUIDs", "Unicode"]
git-tree-sha1 = "7f4228017b83c66bd6aa4fddeb170ce487e53bc7"
uuid = "295af30f-e4ad-537b-8983-00126c2a3abe"
version = "3.6.2"

[[deps.Rotations]]
deps = ["LinearAlgebra", "Quaternions", "Random", "StaticArrays"]
git-tree-sha1 = "5680a9276685d392c87407df00d57c9924d9f11e"
uuid = "6038ab10-8711-5258-84ad-4b1120ba62dc"
version = "1.7.1"
weakdeps = ["RecipesBase"]

    [deps.Rotations.extensions]
    RotationsRecipesBaseExt = "RecipesBase"

[[deps.SHA]]
uuid = "ea8e919c-243c-51af-8825-aaa63cd721ce"
version = "0.7.0"

[[deps.SIMD]]
deps = ["PrecompileTools"]
git-tree-sha1 = "98ca7c29edd6fc79cd74c61accb7010a4e7aee33"
uuid = "fdea26ae-647d-5447-a871-4b548cad5224"
version = "3.6.0"

[[deps.SIMDTypes]]
git-tree-sha1 = "330289636fb8107c5f32088d2741e9fd7a061a5c"
uuid = "94e857df-77ce-4151-89e5-788b33177be4"
version = "0.1.0"

[[deps.SLEEFPirates]]
deps = ["IfElse", "Static", "VectorizationBase"]
git-tree-sha1 = "456f610ca2fbd1c14f5fcf31c6bfadc55e7d66e0"
uuid = "476501e8-09a2-5ece-8869-fb82de89a1fa"
version = "0.6.43"

[[deps.SentinelArrays]]
deps = ["Dates", "Random"]
git-tree-sha1 = "d0553ce4031a081cc42387a9b9c8441b7d99f32d"
uuid = "91c51154-3ec4-41a3-a24f-3f23e20d615c"
version = "1.4.7"

[[deps.Serialization]]
uuid = "9e88b42a-f829-5b0c-bbe9-9e923198166b"
version = "1.11.0"

[[deps.Setfield]]
deps = ["ConstructionBase", "Future", "MacroTools", "StaticArraysCore"]
git-tree-sha1 = "e2cc6d8c88613c05e1defb55170bf5ff211fbeac"
uuid = "efcf1570-3423-57d1-acb7-fd33fddbac46"
version = "1.1.1"

[[deps.SharedArrays]]
deps = ["Distributed", "Mmap", "Random", "Serialization"]
uuid = "1a1011a3-84de-559e-8e89-a11a2f7dc383"
version = "1.11.0"

[[deps.SimpleTraits]]
deps = ["InteractiveUtils", "MacroTools"]
git-tree-sha1 = "5d7e3f4e11935503d3ecaf7186eac40602e7d231"
uuid = "699a6c99-e7fa-54fc-8d76-47d257e15c1d"
version = "0.9.4"

[[deps.SimpleWeightedGraphs]]
deps = ["Graphs", "LinearAlgebra", "Markdown", "SparseArrays"]
git-tree-sha1 = "4b33e0e081a825dbfaf314decf58fa47e53d6acb"
uuid = "47aef6b3-ad0c-573a-a1e2-d07658019622"
version = "1.4.0"

[[deps.Sixel]]
deps = ["Dates", "FileIO", "ImageCore", "IndirectArrays", "OffsetArrays", "REPL", "libsixel_jll"]
git-tree-sha1 = "2da10356e31327c7096832eb9cd86307a50b1eb6"
uuid = "45858cf5-a6b0-47a3-bbea-62219f50df47"
version = "0.1.3"

[[deps.Sockets]]
uuid = "6462fe0b-24de-5631-8697-dd941f90decc"
version = "1.11.0"

[[deps.SortingAlgorithms]]
deps = ["DataStructures"]
git-tree-sha1 = "66e0a8e672a0bdfca2c3f5937efb8538b9ddc085"
uuid = "a2af1166-a08f-5f64-846c-94a0d3cef48c"
version = "1.2.1"

[[deps.SparseArrays]]
deps = ["Libdl", "LinearAlgebra", "Random", "Serialization", "SuiteSparse_jll"]
uuid = "2f01184e-e22b-5df5-ae63-d93ebab69eaf"
version = "1.11.0"

[[deps.SpecialFunctions]]
deps = ["IrrationalConstants", "LogExpFunctions", "OpenLibm_jll", "OpenSpecFun_jll"]
git-tree-sha1 = "2f5d4697f21388cbe1ff299430dd169ef97d7e14"
uuid = "276daf66-3868-5448-9aa4-cd146d93841b"
version = "2.4.0"
weakdeps = ["ChainRulesCore"]

    [deps.SpecialFunctions.extensions]
    SpecialFunctionsChainRulesCoreExt = "ChainRulesCore"

[[deps.StackViews]]
deps = ["OffsetArrays"]
git-tree-sha1 = "46e589465204cd0c08b4bd97385e4fa79a0c770c"
uuid = "cae243ae-269e-4f55-b966-ac2d0dc13c15"
version = "0.1.1"

[[deps.Static]]
deps = ["CommonWorldInvalidations", "IfElse", "PrecompileTools"]
git-tree-sha1 = "87d51a3ee9a4b0d2fe054bdd3fc2436258db2603"
uuid = "aedffcd0-7271-4cad-89d0-dc628f76c6d3"
version = "1.1.1"

[[deps.StaticArrayInterface]]
deps = ["ArrayInterface", "Compat", "IfElse", "LinearAlgebra", "PrecompileTools", "Static"]
git-tree-sha1 = "96381d50f1ce85f2663584c8e886a6ca97e60554"
uuid = "0d7ed370-da01-4f52-bd93-41d350b8b718"
version = "1.8.0"
weakdeps = ["OffsetArrays", "StaticArrays"]

    [deps.StaticArrayInterface.extensions]
    StaticArrayInterfaceOffsetArraysExt = "OffsetArrays"
    StaticArrayInterfaceStaticArraysExt = "StaticArrays"

[[deps.StaticArrays]]
deps = ["LinearAlgebra", "PrecompileTools", "Random", "StaticArraysCore"]
git-tree-sha1 = "eeafab08ae20c62c44c8399ccb9354a04b80db50"
uuid = "90137ffa-7385-5640-81b9-e52037218182"
version = "1.9.7"
weakdeps = ["ChainRulesCore", "Statistics"]

    [deps.StaticArrays.extensions]
    StaticArraysChainRulesCoreExt = "ChainRulesCore"
    StaticArraysStatisticsExt = "Statistics"

[[deps.StaticArraysCore]]
git-tree-sha1 = "192954ef1208c7019899fbf8049e717f92959682"
uuid = "1e83bf80-4336-4d27-bf5d-d5a4f845583c"
version = "1.4.3"

[[deps.Statistics]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "ae3bb1eb3bba077cd276bc5cfc337cc65c3075c0"
uuid = "10745b16-79ce-11e8-11f9-7d13ad32a3b2"
version = "1.11.1"
weakdeps = ["SparseArrays"]

    [deps.Statistics.extensions]
    SparseArraysExt = ["SparseArrays"]

[[deps.StatsAPI]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "1ff449ad350c9c4cbc756624d6f8a8c3ef56d3ed"
uuid = "82ae8749-77ed-4fe6-ae5f-f523153014b0"
version = "1.7.0"

[[deps.StatsBase]]
deps = ["DataAPI", "DataStructures", "LinearAlgebra", "LogExpFunctions", "Missings", "Printf", "Random", "SortingAlgorithms", "SparseArrays", "Statistics", "StatsAPI"]
git-tree-sha1 = "5cf7606d6cef84b543b483848d4ae08ad9832b21"
uuid = "2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91"
version = "0.34.3"

[[deps.StringManipulation]]
deps = ["PrecompileTools"]
git-tree-sha1 = "a6b1675a536c5ad1a60e5a5153e1fee12eb146e3"
uuid = "892a3eda-7b42-436c-8928-eab12a02cf0e"
version = "0.4.0"

[[deps.StyledStrings]]
uuid = "f489334b-da3d-4c2e-b8f0-e476e12c162b"
version = "1.11.0"

[[deps.SuiteSparse_jll]]
deps = ["Artifacts", "Libdl", "libblastrampoline_jll"]
uuid = "bea87d4a-7f5b-5778-9afe-8cc45184846c"
version = "7.7.0+0"

[[deps.TOML]]
deps = ["Dates"]
uuid = "fa267f1f-6049-4f14-aa54-33bafae1ed76"
version = "1.0.3"

[[deps.TableTraits]]
deps = ["IteratorInterfaceExtensions"]
git-tree-sha1 = "c06b2f539df1c6efa794486abfb6ed2022561a39"
uuid = "3783bdb8-4a98-5b6b-af9a-565f29a5fe9c"
version = "1.0.1"

[[deps.Tables]]
deps = ["DataAPI", "DataValueInterfaces", "IteratorInterfaceExtensions", "OrderedCollections", "TableTraits"]
git-tree-sha1 = "598cd7c1f68d1e205689b1c2fe65a9f85846f297"
uuid = "bd369af6-aec1-5ad0-b16a-f7cc5008161c"
version = "1.12.0"

[[deps.Tar]]
deps = ["ArgTools", "SHA"]
uuid = "a4e569a6-e804-4fa4-b0f3-eef7a1d5b13e"
version = "1.10.0"

[[deps.TensorCore]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "1feb45f88d133a655e001435632f019a9a1bcdb6"
uuid = "62fd8b95-f654-4bbd-a8a5-9c27f68ccd50"
version = "0.1.1"

[[deps.Test]]
deps = ["InteractiveUtils", "Logging", "Random", "Serialization"]
uuid = "8dfed614-e22c-5e08-85e1-65c5234f0b40"
version = "1.11.0"

[[deps.ThreadingUtilities]]
deps = ["ManualMemory"]
git-tree-sha1 = "eda08f7e9818eb53661b3deb74e3159460dfbc27"
uuid = "8290d209-cae3-49c0-8002-c8c24d57dab5"
version = "0.5.2"

[[deps.TiffImages]]
deps = ["ColorTypes", "DataStructures", "DocStringExtensions", "FileIO", "FixedPointNumbers", "IndirectArrays", "Inflate", "Mmap", "OffsetArrays", "PkgVersion", "ProgressMeter", "SIMD", "UUIDs"]
git-tree-sha1 = "38f139cc4abf345dd4f22286ec000728d5e8e097"
uuid = "731e570b-9d59-4bfa-96dc-6df516fadf69"
version = "0.10.2"

[[deps.TiledIteration]]
deps = ["OffsetArrays", "StaticArrayInterface"]
git-tree-sha1 = "1176cc31e867217b06928e2f140c90bd1bc88283"
uuid = "06e1c1a7-607b-532d-9fad-de7d9aa2abac"
version = "0.5.0"

[[deps.TranscodingStreams]]
git-tree-sha1 = "0c45878dcfdcfa8480052b6ab162cdd138781742"
uuid = "3bb67fe8-82b1-5028-8e26-92a6c54297fa"
version = "0.11.3"

[[deps.Tricks]]
git-tree-sha1 = "7822b97e99a1672bfb1b49b668a6d46d58d8cbcb"
uuid = "410a4b4d-49e4-4fbc-ab6d-cb71b17b3775"
version = "0.1.9"

[[deps.URIs]]
git-tree-sha1 = "67db6cc7b3821e19ebe75791a9dd19c9b1188f2b"
uuid = "5c2747f8-b7ea-4ff2-ba2e-563bfd36b1d4"
version = "1.5.1"

[[deps.UUIDs]]
deps = ["Random", "SHA"]
uuid = "cf7118a7-6976-5b1a-9a39-7adc72f591a4"
version = "1.11.0"

[[deps.UnPack]]
git-tree-sha1 = "387c1f73762231e86e0c9c5443ce3b4a0a9a0c2b"
uuid = "3a884ed6-31ef-47d7-9d2a-63182c4928ed"
version = "1.0.2"

[[deps.Unicode]]
uuid = "4ec0a83e-493e-50e2-b9ac-8f72acf5a8f5"
version = "1.11.0"

[[deps.VectorizationBase]]
deps = ["ArrayInterface", "CPUSummary", "HostCPUFeatures", "IfElse", "LayoutPointers", "Libdl", "LinearAlgebra", "SIMDTypes", "Static", "StaticArrayInterface"]
git-tree-sha1 = "e7f5b81c65eb858bed630fe006837b935518aca5"
uuid = "3d5dd08c-fd9d-11e8-17fa-ed2836048c2f"
version = "0.21.70"

[[deps.WoodburyMatrices]]
deps = ["LinearAlgebra", "SparseArrays"]
git-tree-sha1 = "c1a7aa6219628fcd757dede0ca95e245c5cd9511"
uuid = "efce3f68-66dc-5838-9240-27a6d6f5f9b6"
version = "1.0.0"

[[deps.XZ_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "ac88fb95ae6447c8dda6a5503f3bafd496ae8632"
uuid = "ffd25f8a-64ca-5728-b0f7-c24cf3aae800"
version = "5.4.6+0"

[[deps.Zlib_jll]]
deps = ["Libdl"]
uuid = "83775a58-1f1d-513f-b197-d71354ab007a"
version = "1.2.13+1"

[[deps.Zstd_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "555d1076590a6cc2fdee2ef1469451f872d8b41b"
uuid = "3161d3a3-bdf6-5164-811a-617609db77b4"
version = "1.5.6+1"

[[deps.libblastrampoline_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "8e850b90-86db-534c-a0d3-1478176c7d93"
version = "5.11.0+0"

[[deps.libpng_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Zlib_jll"]
git-tree-sha1 = "b70c870239dc3d7bc094eb2d6be9b73d27bef280"
uuid = "b53b4c65-9356-5827-b1ea-8c7a1a84506f"
version = "1.6.44+0"

[[deps.libsixel_jll]]
deps = ["Artifacts", "JLLWrappers", "JpegTurbo_jll", "Libdl", "Pkg", "libpng_jll"]
git-tree-sha1 = "7dfa0fd9c783d3d0cc43ea1af53d69ba45c447df"
uuid = "075b6546-f08a-558a-be8f-8157d0f608a5"
version = "1.10.3+1"

[[deps.nghttp2_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "8e850ede-7688-5339-a07c-302acd2aaf8d"
version = "1.59.0+0"

[[deps.oneTBB_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "7d0ea0f4895ef2f5cb83645fa689e52cb55cf493"
uuid = "1317d2d5-d96f-522e-a858-c73665f53c3e"
version = "2021.12.0+0"

[[deps.p7zip_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "3f19e933-33d8-53b3-aaab-bd5110c3b7a0"
version = "17.4.0+2"
"""

# ╔═╡ Cell order:
# ╟─a71640de-710a-49ec-ad73-e9f864b6af29
# ╟─635b048e-a860-11ef-14ae-5d21081aae2d
# ╟─5368d349-01ee-4b83-911a-2d08313b17cf
# ╠═e7070187-4f4f-44f9-a600-032ec9eb8c9a
# ╟─1e27d1b9-7054-4fa5-beb0-a79a1e35c8b2
# ╟─62f96bf6-5555-45d3-8762-d0baf20df1ef
# ╠═aa50a8dc-62f3-4ba9-9230-d244fdfc9221
# ╠═12050c8d-8ebf-44bf-93db-797abdee4212
# ╟─70faf3ec-f388-4421-93f9-d32743878c4f
# ╟─1b9c4f9b-2d30-4eec-aa80-0e0fba6681da
# ╟─03e0b352-2057-496a-9fb7-6ed85e483f4b
# ╠═e6c7771c-2034-40d2-b8bd-27799412ffa0
# ╟─ec7640b6-28cb-424a-a01f-c08323f9a642
# ╠═d8a3030f-85c3-455a-bc4c-2b1335a2676f
# ╟─ed0a9ce6-04bb-43c4-a841-602319dce528
# ╟─bf58a68b-38d5-4baa-904e-eb1b4c642750
# ╠═437bdc1f-fd3d-4afc-8bb6-06da07c7e43a
# ╠═da97c1dd-eaf6-43d1-add3-0926426f421c
# ╟─aaf9cc56-3a94-428f-9f96-c634eca9ab5a
# ╠═3f63f9d2-6688-41d5-8d89-d5ef056a3d43
# ╟─0a226ed1-5316-4a16-8a7d-f1f067672c6d
# ╠═5bd138dc-bbc1-4b03-a186-408c227f9e76
# ╠═ee0c415e-ffa3-497e-a24f-2e7ecbd9a3a7
# ╠═d3e79382-489d-4b08-9460-dc7b439057a3
# ╟─ff5b5ab0-0cab-40c1-8834-befbb98674c1
# ╟─5bf64adb-6649-4156-86e8-2421d6a8605d
# ╠═76dd6b01-0d6c-4522-9cca-2dad8b3aa170
# ╟─c1c7f08f-fc70-46da-a28c-f3d3875a6ed2
# ╟─290dc343-3b91-428b-9323-fa107163ec67
# ╟─18caf8ad-4998-422d-b199-d07aa3919fb1
# ╠═8431591e-9d3b-48d1-b498-9a33d727b51c
# ╟─2a6caeb5-8ede-492a-ab29-463def88d640
# ╟─53bf62c8-ca3e-43f3-9a2b-4d2089a28719
# ╠═562b040d-fcc8-4ae9-b865-d83c8e5a6942
# ╠═ad44e4d9-f15f-4f45-90fd-83929907affa
# ╟─e4a03018-1c96-4c94-89cf-ba840b5884b5
# ╟─d138b2f9-cc94-4575-a6a0-78d7735a9d01
# ╠═4acd06d1-c331-4fee-bfb3-82375e5702e3
# ╠═cbb6e559-bf09-42a8-b481-52c8350aedba
# ╟─9a3aecdc-b3f6-48c4-98a3-58545fc540d2
# ╟─52fbd30f-b500-4351-a568-56246f7f9ab4
# ╠═b5122c14-336c-4f42-b2d2-8b39397b2e88
# ╟─a07c979a-9416-460a-91ab-f3b233807bb5
# ╟─257f39bd-6d4d-4cfe-ab85-3beaec58dc1f
# ╠═2578a164-63b2-44c4-909a-ffd57b6dcdd3
# ╟─9f579635-c4f4-4b82-a3ed-6a9c831be7e7
# ╠═1460b1b4-d628-4644-af5b-4ded724698bc
# ╟─1cc18816-5021-4001-b278-f7c61e82f3d2
# ╠═b94b9d8e-e205-4575-8c8d-e9aee7a33216
# ╟─698fda84-f7cf-4574-ae06-4f56ec1006da
# ╠═46dd08ec-d338-494b-9167-c4943e1da884
# ╟─677fa228-bbb9-483b-8335-910c0b8e0257
# ╠═1373f946-8ca3-47da-879b-7894855763c7
# ╟─2d9f3e63-fade-4fa3-a21a-2adbbdfb4caf
# ╟─b08a7fe8-afc8-4ced-850e-499726b071b5
# ╠═82321fd6-f26d-4180-8876-3e6631c7ce6e
# ╟─c2db3a47-06f5-4d4d-9d53-d5e24a0be370
# ╟─649e4c6e-48e7-46c5-80c3-945d3db7b295
# ╠═4448c11d-e01a-419f-b6e5-3352c5f15095
# ╠═66978d78-ed97-4a5b-8ee8-a91caf2d6dff
# ╠═2de76067-79f9-4fcb-ba07-eb5b8cec66bd
# ╟─2f778dc2-3755-4dd0-aed4-28097243a3a4
# ╠═3f76c202-72e9-4b00-8739-2132ed25ef1b
# ╟─6551235f-4288-4e31-9056-9a7b406c2040
# ╟─6f7a1b59-039a-45a8-9276-ea4034b9120b
# ╟─15f98c76-cbb5-4c8e-9797-4fd91a723e93
# ╟─4cdc7ec2-be10-4df9-ada9-f7f45e1bbf9e
# ╟─ba32831b-637a-48a2-bebb-a9753bcfefd3
# ╟─57a60f8d-5eb9-47ca-b415-3594555ae23b
# ╟─6062c516-de31-4806-b1a5-a645b3a62ae9
# ╟─14d30735-4f0f-4697-b496-f36f9436c8dd
# ╟─9ddc72eb-58e9-41a7-801c-f092fd014d50
# ╠═0e8e9341-2f44-4851-b01f-d65cb9de812c
# ╟─7d0bb93a-61ed-4e4d-8e59-39c9523716c6
# ╠═b61e377c-d2ed-414d-a95a-71d3ec6a354c
# ╠═102b2df7-749d-4d9b-b01e-1d59d326983a
# ╠═0d453748-3c4b-47ce-b35f-215e729efcb0
# ╟─e82de518-884a-437f-8b1a-81c3a6469f21
# ╠═d53648e6-1e71-47d3-8693-3cecb2b6bdf7
# ╟─82163383-c42f-45d4-95c3-534e0087cd98
# ╟─903f739a-addc-471f-8f91-790f3da1e3a1
# ╠═d99a9f8e-5a00-47d7-a93a-3178fec13d07
# ╟─8b9b15b8-2334-4996-bce3-6a94540ca7ca
# ╠═0ff66ab9-dbcd-4ad3-b36f-a9e4f60e9356
# ╟─468b85e3-2956-4816-a771-e533863df9e8
# ╟─6667ccf8-c9d2-4bc3-96d2-768710d96bcf
# ╟─877dad0e-2356-449f-8727-bd4c3f82b57d
# ╠═0345f338-67f1-40fc-b33a-245ecb84340d
# ╟─50d02ae7-514e-441d-b72d-76c1e6a4733d
# ╠═bbb3dd6d-b742-45c5-b44c-c92a86ec803d
# ╟─17ef5bbb-62f7-4083-b140-70bc10082e3f
# ╠═212ce250-671e-4544-bf0d-34f2f2c9bcac
# ╟─137be08c-f1ec-4847-9494-160c34ed99a8
# ╠═08987a64-37d4-4473-ba17-192cda21a6e2
# ╟─944b28d8-2895-44d5-9ad8-9da3bc764f72
# ╠═79952b39-e9b4-4e51-947e-9b58aa59ae90
# ╟─9e213047-2ece-4eb7-a8ef-ba2e050792e0
# ╟─11fd6fa6-5390-4ac7-bf01-2d1e749050b9
# ╠═ffff98de-9628-4ecb-a896-9c4ec860d1d1
# ╟─e1540cd7-b8f3-4ab5-9112-8bbea3bedd97
# ╠═6847fb1a-832d-4825-baef-8161ba166882
# ╟─7d1161c1-7043-41eb-8003-2341e7926fa2
# ╟─99d0da7d-f8e5-4e23-9062-3fab25535c52
# ╠═d4633135-7966-4ced-812e-8e1f9d0c9acb
# ╠═60697404-4ac0-4847-b3c1-73c13ffdc349
# ╟─61df9011-8dab-4a4f-8b14-be7c27c451b4
# ╠═05b4a421-8ce5-43b8-93d7-ffd0640d0c36
# ╠═a622e5ab-5d15-41ec-b9d4-21728f783d7b
# ╠═3b15f13f-f894-4cef-9d8e-fc91d8faafe1
# ╟─f78e91ca-d156-495d-8679-eeb825d7de26
# ╟─49a65707-4d9a-4e40-8dea-cdcad40ab608
# ╟─bc36b1d1-6af8-41d6-9e4f-fbb0bf7ddb2c
# ╟─3dda157f-7516-4248-93d8-d69e552d4ed6
# ╟─cec6a903-fc5e-4fec-8a86-8f499634cf1b
# ╟─01ae1b49-87ff-43f0-89bc-1c52e9fd8136
# ╟─17688a78-6431-4fe8-98db-ac4b5e9f78cb
# ╟─56c2bd1c-a32b-4098-a5aa-d3c8ec3b9333
# ╟─3e52f29e-4858-43bb-913a-cacc32f51311
# ╟─c46a9b40-ca5e-4b4d-9fe6-29c54178a15c
# ╟─76ad1b54-d57a-4bc7-9665-58e9df429259
# ╟─c6567d47-a5bb-44d7-bb00-21a764e34b6b
# ╟─00000000-0000-0000-0000-000000000001
# ╟─00000000-0000-0000-0000-000000000002
